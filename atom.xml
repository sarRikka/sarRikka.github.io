<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rikka</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-15T07:03:38.904Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>cyy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>挖矿教程（小白版）</title>
    <link href="http://example.com/2021/10/16/%E6%8C%96%E7%9F%BF%E6%95%99%E7%A8%8B%EF%BC%88%E5%B0%8F%E7%99%BD%E7%89%88%EF%BC%89/"/>
    <id>http://example.com/2021/10/16/%E6%8C%96%E7%9F%BF%E6%95%99%E7%A8%8B%EF%BC%88%E5%B0%8F%E7%99%BD%E7%89%88%EF%BC%89/</id>
    <published>2021-10-15T16:00:00.000Z</published>
    <updated>2021-10-15T07:03:38.904Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.选择一个矿池完成注册</strong>—–<a href="https://www.sparkpool.com/">（点击传送门）</a><br>在官网注册好之后，<a href="https://help.sparkpool.com/hc/kb/article/1413627/?lang=zh_cn">这是注册子账户和配置矿机的图文教程（点击传送门）</a>，在完成相关的注册和子账户的配置后，我们进入下一步。</p><span id="more"></span><p><strong>2.下载挖矿软件，这里推荐用轻松矿工</strong>，<a href="http://www.qskg.top/download.html">软件下载地址</a>。</p><p><img src="https://img-blog.csdnimg.cn/20201126004544536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>直接点开安装软件，注意勾选的选项</strong></p><p><img src="https://img-blog.csdnimg.cn/20201126004722379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>3.轻松矿工下载好了之后，点击运行</strong></p><p><img src="https://img-blog.csdnimg.cn/20201126005240971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><strong>可以将虚拟内存设置高一些</strong></p><p><img src="https://img-blog.csdnimg.cn/20201126010141207.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>矿工名可以随便打</strong></p><p><strong>币种我这选择了CKB</strong></p><p><strong>钱包就是我们之前创建的子账户，将子账户的名字复制粘贴进钱包那。</strong></p><p><strong>矿池星火，内壳第一个就好。</strong></p><p><img src="https://img-blog.csdnimg.cn/20201126005734722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>之后点击开始挖矿，在这可以查看收益</strong></p><p><img src="https://img-blog.csdnimg.cn/20201126010347431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><strong>这是我用笔记本挖了10min获得的CKB币，注意别用笔记本挖矿，很伤寿命！！！我只是挖着玩玩。</strong><br><img src="https://img-blog.csdnimg.cn/20201126010417999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>接下来大家可以试着获得属于自己的虚拟货币了~</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;1.选择一个矿池完成注册&lt;/strong&gt;—–&lt;a href=&quot;https://www.sparkpool.com/&quot;&gt;（点击传送门）&lt;/a&gt;&lt;br&gt;在官网注册好之后，&lt;a href=&quot;https://help.sparkpool.com/hc/kb/article/1413627/?lang=zh_cn&quot;&gt;这是注册子账户和配置矿机的图文教程（点击传送门）&lt;/a&gt;，在完成相关的注册和子账户的配置后，我们进入下一步。&lt;/p&gt;</summary>
    
    
    
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>线段树实现与应用</title>
    <link href="http://example.com/2021/10/16/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%AC%E4%B8%89%E7%89%88%E7%AD%94%E6%A1%88/"/>
    <id>http://example.com/2021/10/16/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%AC%E4%B8%89%E7%89%88%E7%AD%94%E6%A1%88/</id>
    <published>2021-10-15T16:00:00.000Z</published>
    <updated>2021-10-24T14:14:13.648Z</updated>
    
    <content type="html"><![CDATA[<p>﻿链接：<a href="https://pan.baidu.com/s/1YLsS-rqWY5iDfmEcP2EE6g">https://pan.baidu.com/s/1YLsS-rqWY5iDfmEcP2EE6g</a><br>提取码：rikk</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;﻿链接：&lt;a href=&quot;https://pan.baidu.com/s/1YLsS-rqWY5iDfmEcP2EE6g&quot;&gt;https://pan.baidu.com/s/1YLsS-rqWY5iDfmEcP2EE6g&lt;/a&gt;&lt;br&gt;提取码：rikk&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="资源" scheme="http://example.com/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>线段树实现与应用</title>
    <link href="http://example.com/2021/10/16/%E7%BA%BF%E6%AE%B5%E6%A0%91--%E6%A6%82%E5%BF%B5+%E6%A8%A1%E6%9D%BF+%E5%85%A5%E9%97%A8%E9%A2%98/"/>
    <id>http://example.com/2021/10/16/%E7%BA%BF%E6%AE%B5%E6%A0%91--%E6%A6%82%E5%BF%B5+%E6%A8%A1%E6%9D%BF+%E5%85%A5%E9%97%A8%E9%A2%98/</id>
    <published>2021-10-15T16:00:00.000Z</published>
    <updated>2021-10-21T02:53:27.480Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>子问题–1<br>给出n个数，m次问询，每次问询给出一个范围l、r，求区间l–r的总和<br>很容易想到用前缀和可以解决  O(n)</p><p>子问题–2<br>给出n个数，m次修改，每次给出一个范围l、r和一个值k，将区间l—r的数全部+k，m次修改后，再问询1次求区间l–r的总和<br>也可以想到这用差分就能解决  O(n)</p><span id="more"></span><p>最后将这两个问题结合起来，给出n个数，m次操作，操作有两种一个是将区间l–r的值+k,一个是询问区间l–r的总和。</p><p>这个问题与之前不同的地方是，之前想要求一个范围只需处理一次数据算前缀和，然后数据不变，可以一劳永逸算出多次查询，但现在用原本的方法的话，每当数据更新一次，就必须再算一次前缀和 O(n^2)。</p><p>那有没有一些方法能够优化最后一种问题呢？</p><p>现在就到了线段树出场的时候啦~</p><h2 id="线段树基本概念"><a href="#线段树基本概念" class="headerlink" title="线段树基本概念"></a>线段树基本概念</h2><p><strong>1.线段树是一颗二叉树</strong></p><p><strong>2.线段树的每一个结点由左端点，右端点，范围值组成、懒标记（子树的待加值）</strong></p><p><strong>3.线段树核心思想是二分</strong></p><p><strong>下面来看看线段树长啥样</strong></p><p><img src="https://img-blog.csdnimg.cn/20210310131300502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">特征：仔细观察一下会发现这其实是一个二分的一个过程，对于一个结点k的左子树它的左儿子的序号为2<em>k,右儿子的序号为2</em>k+1。设mid=(l+r)/2,然后左儿子的范围为[父节点l,父节点mid]，右儿子的范围为[父节点mid,父节点r]。</p><p><strong>在这着重介绍下懒标记</strong></p><p>每当我们修改一个范围内的值时，为了维护线段树，我们需要将每个与该范围相关的范围都修改一遍。如我要将1–8全部+3,那我需要将所有结点的w值都改变，这的操作数（15）已经比直接将8个元素+3的操作数（8）还多了。而懒标记就是来优化这个过程的，可以将懒标记当作一个待加值。如果我们暂时还用不到后面的值，这个待加值先暂时存储在他的父节点上，如果后面有相关的问询或修改要用到后面的结点，那这待加值顺带就给它加上，这样会避免每改一个值都将相关的范围结点改一遍，而一些根本用不到的结点也去改变就会浪费很多时间，所以先把这个待加值记在父结点上，如果后续操作需用到父节点的儿子，那时在加上也不迟，这样就确保了我们每次改变的结点都是我们需要用到的，不会有多余的浪费。<br><img src="https://img-blog.csdnimg.cn/2021031013464565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="线段树基本操作"><a href="#线段树基本操作" class="headerlink" title="线段树基本操作"></a>线段树基本操作</h2><p><strong>一个结点</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r, f, w;<span class="comment">//l表示左端，r右端，w范围内的和，f是懒标记后文解释</span></span><br><span class="line">&#125;tree[<span class="number">500005</span>*<span class="number">4</span>];<span class="comment">//开的空间为题目给出元素数目的四倍，可以模拟一下建树的过程加以理解</span></span><br></pre></td></tr></table></figure><p><strong>建树</strong></p><p>按着二分的思路往下递归，直到范围为一个元素赋值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> ll, <span class="keyword">int</span> rr)</span><span class="comment">//k是结点序号、ll、rr分别是左右范围</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[k].l = ll, tree[k].r = rr;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r) &#123;cin &gt;&gt; tree[k].w; <span class="keyword">return</span> ;&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span>*k,ll,mid);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span> * k + <span class="number">1</span>,mid+<span class="number">1</span>,rr);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>单点查询</strong></p><p>和二分一样发现点在左边查询左子树，点在右边查询右子树直到找到该点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ask_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span>  <span class="comment">//返回x这个点的值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k, x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>单点修改</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> add)</span><span class="comment">//k是结点序号 给第x个元素加add</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid) <span class="built_in">change_point</span>(<span class="number">2</span> * k, x, add);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>范围查询</strong><br>对区域[x,y]的和的查询<br>当前结点表示的范围[l,r]<br>发现要查询的区域完全包含当前结点(x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)  直接加上当前结点的值</p><p>令mid = (tree[k].l + tree[k].r) / 2</p><p>如果(x&lt;=mid) 则表示在当前结点左儿子表示的范围中包含查询区域的部分或全部值，对左儿子查询加上其返回的值</p><p>如果(y &gt; mid)  则表示在当前结点右儿子表示的范围中包含查询区域的部分或全部值，对右儿子查询加上其返回的值</p><p>如：</p><p>构造的线段树还是原来这个<br><img src="https://img-blog.csdnimg.cn/20210310142134225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询[2,6]的值</p><p><img src="https://img-blog.csdnimg.cn/20210310142320417.png" alt="在这里插入图片描述">此时在1号结点，不满足全部包含<br>mid=(1+8)/2=4<br>x&lt;=mid  左段包含<br>y&gt;mid+1  右段包含</p><p>分成两段再次问询</p><p><img src="https://img-blog.csdnimg.cn/20210310142855153.png" alt="在这里插入图片描述"><br>此时在1*2=2号结点，不满足全部包含<br>mid=(1+4)/2=2<br>x&lt;=mid  左段包含<br>y&gt;mid+1  右段包含</p><p>继续模拟即可<br>……</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ask_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span><span class="comment">//求[x,y]范围的和</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k, x, y);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>范围修改</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> add)</span><span class="comment">//x、y范围内+add</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add * (tree[k].r - tree[k].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f += add;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k, x, y, add);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线段树模板"><a href="#线段树模板" class="headerlink" title="线段树模板"></a>线段树模板</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll l, r, f, w;</span><br><span class="line">&#125;tree[<span class="number">5000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> ll, <span class="keyword">int</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[k].l = ll, tree[k].r = rr;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r) &#123;cin &gt;&gt; tree[k].w; <span class="keyword">return</span> ;&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span>*k,ll,mid);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span> * k + <span class="number">1</span>,mid+<span class="number">1</span>,rr);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[<span class="number">2</span> * k].f += tree[k]. f;</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].f += tree[k].f;</span><br><span class="line">tree[<span class="number">2</span> * k].w += tree[k].f * (tree[<span class="number">2</span> * k].r - tree[<span class="number">2</span> * k].l + <span class="number">1</span>);</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].w += tree[k].f * (tree[<span class="number">2</span> * k + <span class="number">1</span>].r - tree[<span class="number">2</span> * k + <span class="number">1</span>].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid) <span class="built_in">change_point</span>(<span class="number">2</span> * k, x, add);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k, x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k, x, y);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add * (tree[k].r - tree[k].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f += add;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k, x, y, add);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FAST;</span><br><span class="line"><span class="keyword">int</span> n, m;cin &gt;&gt; n &gt;&gt; m;<span class="comment">//n个元素m个操作</span></span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//建n个元素的线段树</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sec;cin &gt;&gt; sec;</span><br><span class="line"><span class="keyword">if</span> (sec == <span class="number">1</span>)<span class="comment">//询问某个点的值</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x;cin &gt;&gt; x;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ask_point</span>(<span class="number">1</span>, x) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sec==<span class="number">2</span>)<span class="comment">//修改某个点的值</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, add;cin &gt;&gt; x &gt;&gt; add;</span><br><span class="line"><span class="built_in">change_point</span>(<span class="number">1</span>, x, add);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sec == <span class="number">3</span>)<span class="comment">//询问一段区间</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y;cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ask_interval</span>(<span class="number">1</span>, x, y) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sec == <span class="number">4</span>)<span class="comment">//改变一段区间的值</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, add;cin &gt;&gt; x &gt;&gt; y &gt;&gt; add;</span><br><span class="line"><span class="built_in">change_interval</span>(<span class="number">1</span>, x, y, add);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线段树入门题"><a href="#线段树入门题" class="headerlink" title="线段树入门题"></a>线段树入门题</h2><p><a href="https://www.luogu.com.cn/problem/P3374">https://www.luogu.com.cn/problem/P3374</a></p><p><a href="https://www.luogu.com.cn/problem/P3368">https://www.luogu.com.cn/problem/P3368</a></p><p><a href="https://www.luogu.com.cn/problem/P3372">https://www.luogu.com.cn/problem/P3372</a></p><p><a href="https://www.luogu.com.cn/problem/P3373">https://www.luogu.com.cn/problem/P3373</a></p><p><strong>第一题源码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll l, r, f, w;</span><br><span class="line">&#125;tree[<span class="number">5000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> ll, <span class="keyword">int</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[k].l = ll, tree[k].r = rr;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r) &#123;cin &gt;&gt; tree[k].w; <span class="keyword">return</span> ;&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span>*k,ll,mid);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span> * k + <span class="number">1</span>,mid+<span class="number">1</span>,rr);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[<span class="number">2</span> * k].f += tree[k]. f;</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].f += tree[k].f;</span><br><span class="line">tree[<span class="number">2</span> * k].w += tree[k].f * (tree[<span class="number">2</span> * k].r - tree[<span class="number">2</span> * k].l + <span class="number">1</span>);</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].w += tree[k].f * (tree[<span class="number">2</span> * k + <span class="number">1</span>].r - tree[<span class="number">2</span> * k + <span class="number">1</span>].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid) <span class="built_in">change_point</span>(<span class="number">2</span> * k, x, add);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k, x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k, x, y);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add * (tree[k].r - tree[k].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f += add;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k, x, y, add);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sec;cin &gt;&gt; sec;</span><br><span class="line"><span class="keyword">if</span> (sec == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x,k;cin &gt;&gt; x &gt;&gt; k;</span><br><span class="line"><span class="built_in">change_point</span>(<span class="number">1</span>, x,k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y;cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ask_interval</span>(<span class="number">1</span>, x, y) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第二题源码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">ll ans, a, b, x, y;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll l, r, f, w;</span><br><span class="line">&#125;tree[<span class="number">5000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> ll, <span class="keyword">int</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[k].l = ll, tree[k].r = rr;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r) &#123;cin &gt;&gt; tree[k].w; <span class="keyword">return</span> ;&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span>*k,ll,mid);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span> * k + <span class="number">1</span>,mid+<span class="number">1</span>,rr);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[<span class="number">2</span> * k].f += tree[k]. f;</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].f += tree[k].f;</span><br><span class="line">tree[<span class="number">2</span> * k].w += tree[k].f * (tree[<span class="number">2</span> * k].r - tree[<span class="number">2</span> * k].l + <span class="number">1</span>);</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].w += tree[k].f * (tree[<span class="number">2</span> * k + <span class="number">1</span>].r - tree[<span class="number">2</span> * k + <span class="number">1</span>].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid) <span class="built_in">change_point</span>(<span class="number">2</span> * k, x, add);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k, x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k, x, y);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add * (tree[k].r - tree[k].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f += add;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k, x, y, add);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FAST;</span><br><span class="line"><span class="keyword">int</span> n, m;cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sec;cin &gt;&gt; sec;</span><br><span class="line"><span class="keyword">if</span> (sec == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x;cin &gt;&gt; x;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ask_point</span>(<span class="number">1</span>, x) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, k;cin &gt;&gt; x &gt;&gt; y &gt;&gt; k;</span><br><span class="line"><span class="built_in">change_interval</span>(<span class="number">1</span>, x, y, k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第三题源码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">ll ans, a, b, x, y;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll l, r, f, w;</span><br><span class="line">&#125;tree[<span class="number">5000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> ll, <span class="keyword">int</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[k].l = ll, tree[k].r = rr;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r) &#123;cin &gt;&gt; tree[k].w; <span class="keyword">return</span> ;&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span>*k,ll,mid);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span> * k + <span class="number">1</span>,mid+<span class="number">1</span>,rr);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[<span class="number">2</span> * k].f += tree[k]. f;</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].f += tree[k].f;</span><br><span class="line">tree[<span class="number">2</span> * k].w += tree[k].f * (tree[<span class="number">2</span> * k].r - tree[<span class="number">2</span> * k].l + <span class="number">1</span>);</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].w += tree[k].f * (tree[<span class="number">2</span> * k + <span class="number">1</span>].r - tree[<span class="number">2</span> * k + <span class="number">1</span>].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid) <span class="built_in">change_point</span>(<span class="number">2</span> * k, x, y);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_point</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k, x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">ask_point</span>(<span class="number">2</span> * k + <span class="number">1</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k, x, y);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add * (tree[k].r - tree[k].l + <span class="number">1</span>);</span><br><span class="line">tree[k].f += add;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tree[k].f)<span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k, x, y, add);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)<span class="built_in">change_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y, add);</span><br><span class="line">tree[k].w = tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sec;cin &gt;&gt; sec;</span><br><span class="line"><span class="keyword">if</span> (sec == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, k;cin &gt;&gt; x &gt;&gt; y &gt;&gt; k;</span><br><span class="line"><span class="built_in">change_interval</span>(<span class="number">1</span>, x, y, k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y;cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ask_interval</span>(<span class="number">1</span>, x, y) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第四题源码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> Mod = <span class="number">571373</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll l, r, a = <span class="number">0</span>, m = <span class="number">1</span>, w;</span><br><span class="line">&#125;tree[<span class="number">500005</span>*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> ll, <span class="keyword">int</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[k].l = ll, tree[k].r = rr;</span><br><span class="line"><span class="keyword">if</span> (tree[k].l == tree[k].r) &#123; cin &gt;&gt; tree[k].w; <span class="keyword">return</span>; &#125;</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span> * k, ll, mid);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">2</span> * k + <span class="number">1</span>, mid + <span class="number">1</span>, rr);</span><br><span class="line">tree[k].w = (tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w) % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree[<span class="number">2</span> * k].w = (tree[<span class="number">2</span> * k].w * tree[k].m + (tree[<span class="number">2</span> * k].r - tree[<span class="number">2</span> * k].l + <span class="number">1</span>) * tree[k].a) % Mod;</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].w = (tree[<span class="number">2</span> * k+<span class="number">1</span>].w * tree[k].m + (tree[<span class="number">2</span> * k + <span class="number">1</span>].r - tree[<span class="number">2</span> * k + <span class="number">1</span>].l + <span class="number">1</span>) * tree[k].a) % Mod;</span><br><span class="line">tree[<span class="number">2</span> * k].a = (tree[k].m * tree[<span class="number">2</span> * k].a + tree[k].a) % Mod;</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].a = (tree[k].m * tree[<span class="number">2</span> * k + <span class="number">1</span>].a + tree[k].a) % Mod;</span><br><span class="line">tree[<span class="number">2</span> * k].m = (tree[<span class="number">2</span> * k].m * tree[k].m) % Mod;</span><br><span class="line">tree[<span class="number">2</span> * k + <span class="number">1</span>].m = (tree[k].m * tree[<span class="number">2</span> * k + <span class="number">1</span>].m) % Mod;</span><br><span class="line">tree[k].m = <span class="number">1</span>;</span><br><span class="line">tree[k].a = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ask_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tree[k].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k, x, y);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)ans += <span class="built_in">ask_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change1_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w += add * (tree[k].r - tree[k].l + <span class="number">1</span>);</span><br><span class="line">tree[k].a += add;</span><br><span class="line">tree[k].w %= Mod;</span><br><span class="line">tree[k].a %= Mod;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="built_in">change1_interval</span>(<span class="number">2</span> * k, x, y, add);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)<span class="built_in">change1_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y, add);</span><br><span class="line">tree[k].w = (tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w) % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change2_interval</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> mul)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= tree[k].l &amp;&amp; y &gt;= tree[k].r)</span><br><span class="line">&#123;</span><br><span class="line">tree[k].w *= mul;</span><br><span class="line">tree[k].m *= mul;</span><br><span class="line">tree[k].a *= mul;</span><br><span class="line">tree[k].m %= Mod;</span><br><span class="line">tree[k].a %= Mod;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">down</span>(k);</span><br><span class="line"><span class="keyword">int</span> mid = (tree[k].l + tree[k].r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid)<span class="built_in">change2_interval</span>(<span class="number">2</span> * k, x, y, mul);</span><br><span class="line"><span class="keyword">if</span> (y &gt; mid)<span class="built_in">change2_interval</span>(<span class="number">2</span> * k + <span class="number">1</span>, x, y, mul);</span><br><span class="line">tree[k].w = (tree[<span class="number">2</span> * k].w + tree[<span class="number">2</span> * k + <span class="number">1</span>].w) % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FAST;</span><br><span class="line"><span class="keyword">int</span> n, m;cin &gt;&gt; n &gt;&gt; m &gt;&gt; Mod;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sec;cin &gt;&gt; sec;</span><br><span class="line"><span class="keyword">if</span> (sec == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, k;cin &gt;&gt; x &gt;&gt; y &gt;&gt; k;</span><br><span class="line"><span class="built_in">change2_interval</span>(<span class="number">1</span>, x, y, k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sec==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, k;cin &gt;&gt; x &gt;&gt; y &gt;&gt; k;</span><br><span class="line"><span class="built_in">change1_interval</span>(<span class="number">1</span>, x, y, k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x, y;cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ask_interval</span>(<span class="number">1</span>, x, y) % Mod &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h2&gt;&lt;p&gt;子问题–1&lt;br&gt;给出n个数，m次问询，每次问询给出一个范围l、r，求区间l–r的总和&lt;br&gt;很容易想到用前缀和可以解决  O(n)&lt;/p&gt;
&lt;p&gt;子问题–2&lt;br&gt;给出n个数，m次修改，每次给出一个范围l、r和一个值k，将区间l—r的数全部+k，m次修改后，再问询1次求区间l–r的总和&lt;br&gt;也可以想到这用差分就能解决  O(n)&lt;/p&gt;</summary>
    
    
    
    
    <category term="c++" scheme="http://example.com/tags/c/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="http://example.com/2021/10/16/%E7%BB%99%E7%A7%8B%E6%8B%9B%E5%8A%A0%E7%82%B9%E6%96%99%E2%80%94%E2%80%94Hot15%E9%81%93%E9%AB%98%E9%A2%91%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%81/"/>
    <id>http://example.com/2021/10/16/%E7%BB%99%E7%A7%8B%E6%8B%9B%E5%8A%A0%E7%82%B9%E6%96%99%E2%80%94%E2%80%94Hot15%E9%81%93%E9%AB%98%E9%A2%91%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%81/</id>
    <published>2021-10-15T16:00:00.000Z</published>
    <updated>2021-10-15T07:04:19.349Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p><h1 id="1-链表篇"><a href="#1-链表篇" class="headerlink" title="1.链表篇"></a>1.链表篇</h1><h2 id="反转链表"><a href="#反转链表" class="headerlink" title="反转链表"></a>反转链表</h2><p><strong>难度：easy</strong></p><p><strong>考察次数：189</strong></p><p><a href="https://www.nowcoder.com/practice/75e878df47f24fdc9dc3e400ec6058ca?tpId=117&tqId=37777&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey"><strong>传送门</strong></a></p><p><strong>题目描述</strong><br>输入一个链表，反转链表后，输出新链表的表头。</p><p><strong>思路</strong>:创建三个指针，一个表示前一个结点pre，一个表示当前节点cur，一个表示后一个节点next。循环next=cur-&gt;next，cur-&gt;next=pre，pre=cur，cur=next，直到当前节点为NULL。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">struct ListNode &#123;</span></span><br><span class="line"><span class="comment">int val;</span></span><br><span class="line"><span class="comment">struct ListNode *next;</span></span><br><span class="line"><span class="comment">ListNode(int x) :</span></span><br><span class="line"><span class="comment">val(x), next(NULL) &#123;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;;*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">ReverseList</span><span class="params">(ListNode* pHead)</span> </span>&#123;</span><br><span class="line">    ListNode* cur=pHead,*pre=<span class="literal">NULL</span>,*next;</span><br><span class="line">        <span class="keyword">while</span>(cur!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            next=cur-&gt;next;</span><br><span class="line">            cur-&gt;next=pre;</span><br><span class="line">            pre=cur;</span><br><span class="line">            cur=next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pre;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="判断链表中是否有环"><a href="#判断链表中是否有环" class="headerlink" title="判断链表中是否有环"></a>判断链表中是否有环</h2><p><strong>难度：easy</strong></p><p><strong>考察次数：120</strong></p><p><a href="https://www.nowcoder.com/practice/650474f313294468a4ded3ce0f7898b9?tpId=117&tqId=37714&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey">传送门</a></p><p><strong>题目描述</strong><br>判断给定的链表中是否有环。如果有环则返回true，否则返回false。<br>你能给出空间复杂度的解法么？</p><p><strong>思路</strong>：采用快慢指针解决，慢指针每次向前移动一步，快指针每次向前移动2步，如果链表中有环，快慢指针一定会相遇，注意一下溢出，判断快指针的下一步是不是NULL，如果为NULL则fast-&gt;next-&gt;next就溢出了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>&#123;</span><br><span class="line">        ListNode *fast=head,*cur=head;</span><br><span class="line">        <span class="keyword">while</span>(fast!=<span class="literal">NULL</span>&amp;&amp;fast-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cur=cur-&gt;next;</span><br><span class="line">            fast=fast-&gt;next-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(cur==fast)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="合并有序链表"><a href="#合并有序链表" class="headerlink" title="合并有序链表"></a>合并有序链表</h2><p><strong>难度： middle</strong> </p><p><strong>考察次数：57</strong></p><p><strong><a href="https://www.nowcoder.com/practice/a479a3f0c4554867b35356e0d57cf03d?tpId=117&tqId=37735&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey">传送门</a></strong></p><p><strong>题目描述</strong></p><p>将两个有序的链表合并为一个新链表，要求新的链表是通过拼接两个链表的节点来生成的，且合并后新链表依然有序。</p><p><strong>思路</strong>：先确定表头，创建一个cur表示当前指针，之后比较两个链表表头节点，每次都让cur-&gt;next=较小表头的指针，并让该指针移动到其next，直到某链表为空，将剩余链表全部接到cur后面即可。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *int val;</span></span><br><span class="line"><span class="comment"> *struct ListNode *next;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param l1 ListNode类 </span></span><br><span class="line"><span class="comment">     * @param l2 ListNode类 </span></span><br><span class="line"><span class="comment">     * @return ListNode类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        ListNode* cur,*head;</span><br><span class="line">            <span class="keyword">if</span>(l1==<span class="literal">NULL</span>)<span class="keyword">return</span> l2;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l2==<span class="literal">NULL</span>)<span class="keyword">return</span> l1;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l1-&gt;val&lt;=l2-&gt;val)&#123;cur=l1;l1=l1-&gt;next;&#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;cur=l2;l2=l2-&gt;next;&#125;</span><br><span class="line">        head=cur;</span><br><span class="line">        <span class="keyword">while</span>(!(l1==<span class="literal">NULL</span>&amp;&amp;l2==<span class="literal">NULL</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(l2==<span class="literal">NULL</span>)&#123;cur-&gt;next=l1;l1=l1-&gt;next;&#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l1==<span class="literal">NULL</span>) &#123;cur-&gt;next=l2;l2=l2-&gt;next;&#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l1-&gt;val&lt;=l2-&gt;val)&#123;cur-&gt;next=l1;l1=l1-&gt;next;&#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;cur-&gt;next=l2;l2=l2-&gt;next;&#125;</span><br><span class="line">            cur=cur-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="2-动态规划篇"><a href="#2-动态规划篇" class="headerlink" title="2.动态规划篇"></a>2.动态规划篇</h1><h2 id="跳台阶"><a href="#跳台阶" class="headerlink" title="跳台阶"></a>跳台阶</h2><p><strong>难度: easy</strong></p><p><strong>考察次数： 55</strong></p><p><strong><a href="https://www.nowcoder.com/practice/8c82a5b80378478f9484d87d1c5f12a4?tpId=117&&tqId=37764&&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking">传送门</a></strong></p><p><strong>题目描述</strong><br>一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。</p><p><strong>思路：</strong> d[i]表示从0到第i个台阶总共的方案数。转移方程：dp[i]=dp[i-1]+dp[i-2]，因为当前台阶可以由前两级台阶走到，初始dp[0]=1,dp[1]=1<br>。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloor</span><span class="params">(<span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> dp[<span class="number">10000</span>];</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">1</span>,dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=number;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[i]=dp[i<span class="number">-1</span>]+dp[i<span class="number">-2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[number];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="子数组的最大累加和"><a href="#子数组的最大累加和" class="headerlink" title="子数组的最大累加和"></a>子数组的最大累加和</h2><p><strong>难度：easy</strong></p><p><strong>考察次数：52</strong></p><p><a href="https://www.nowcoder.com/practice/554aa508dd5d4fefbf0f86e5fe953abd?tpId=117&tqId=37797&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey"><strong>传送门</strong></a></p><p><strong>题目描述</strong></p><p>给定一个数组arr，返回子数组的最大累加和<br>例如，arr = [1, -2, 3, 5, -2, 6, -1]，所有子数组中，[3, 5, -2, 6]可以累加出最大的和12，所以返回12.<br>题目保证没有全为负数的数据<br>[要求]<br>时间复杂度为O(n)O(n)O(n)，空间复杂度为O(1)O(1)O(1) </p><p><strong>思路</strong>：dp[i]为以第i个元素为结尾的最大累加和，状态转移方程：dp[i]=max(dp[i-1]+arr[i]，arr[i])，从这可看出其实dp[i]只与dp[i-1]有关，所以对于dp的存储只需要一个空间，每次更新当前dp即可dp(相当于更新后的dp[i])=max(dp(相当于dp[i-1])+arr[i]，arr[i])。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * max sum of the subarray</span></span><br><span class="line"><span class="comment">     * @param arr int整型vector the array</span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span> dp=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxsumofSubarray</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            dp=<span class="built_in">max</span>(dp,<span class="number">0</span>)+arr[i];</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,dp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="求路径"><a href="#求路径" class="headerlink" title="求路径"></a>求路径</h2><p><strong>难度：easy</strong></p><p><strong>考察次数：15</strong></p><p><a href="https://www.nowcoder.com/practice/166eaff8439d4cd898e3ba933fbc6358?tpId=117&tqId=37736&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey"><strong>传送门</strong></a></p><p><strong>题目描述</strong></p><p>一个机器人在m×n大小的地图的左上角（起点）。<br>机器人每次向下或向右移动。机器人要到达地图的右下角（终点）。<br>可以有多少种不同的路径从起点走到终点？</p><p><img src="https://img-blog.csdnimg.cn/2021040518322361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>备注：m和n小于等于100,并保证计算结果在int范围内</p><p><strong>思路：</strong>  dp[i][j]表示走到 位置 i,j 的路径数，状态转移方程  dp[i][j]=dp[i-1][j]+dp[i][j-1] ，注意边界的处理情况。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param m int整型 </span></span><br><span class="line"><span class="comment">     * @param n int整型 </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[x][y])<span class="keyword">return</span> dp[x][y];</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">1</span>||x&gt;n||y&lt;<span class="number">1</span>||y&gt;m)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> dp[x][y]=<span class="built_in">dfs</span>(x<span class="number">-1</span>,y,n,m)+<span class="built_in">dfs</span>(x,y<span class="number">-1</span>,n,m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">uniquePaths</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(m,n,m,n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="最长公共子串"><a href="#最长公共子串" class="headerlink" title="最长公共子串"></a>最长公共子串</h2><p><strong>难度：middle</strong></p><p><strong>考察次数：52</strong></p><p><strong><a href="https://www.nowcoder.com/practice/f33f5adc55f444baa0e0ca87ad8a6aac?tpId=117&tqId=37799&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey">传送门</a></strong></p><p><strong>题目描述</strong><br>给定两个字符串str1和str2,输出两个字符串的最长公共子串<br>题目保证str1和str2的最长公共子串存在且唯一。 </p><p><strong>思路：</strong>  dp[i][j]代表str1串第以第i个字符结尾和str2串的公共串长度。状态转移方程：如果：str1[i]==str2[j]，dp[i][j]=dp[i-1][j-1]+1,如果str1[i]!=str2[j]，dp[i][j]=0。然后题目求的是最长串，那我们只需记录哪时dp[i][j]最大，最长公共串即为此时的i向前取dp[i][j]长度。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * longest common substring</span></span><br><span class="line"><span class="comment">     * @param str1 string字符串 the string</span></span><br><span class="line"><span class="comment">     * @param str2 string字符串 the string</span></span><br><span class="line"><span class="comment">     * @return string字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span> dp[<span class="number">5005</span>][<span class="number">5005</span>];</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">        <span class="function">string <span class="title">LCS</span><span class="params">(string str1, string str2)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        string str;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str1.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; str2.<span class="built_in">size</span>();j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (str1[i] == str2[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span> &gt; ans)</span><br><span class="line">                        &#123;</span><br><span class="line">                            str = str1.<span class="built_in">substr</span>(i - dp[i - <span class="number">1</span>][j - <span class="number">1</span>], dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line">                            ans = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>, ans);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;[`</span><br><span class="line">                        dp[i][j] = <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="number">1</span> &gt;= ans) &#123; ans = <span class="number">1</span>;str = str1[i]; &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> dp[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="3-树篇"><a href="#3-树篇" class="headerlink" title="3.树篇"></a>3.树篇</h1><h2 id="两个节点最近公共祖先"><a href="#两个节点最近公共祖先" class="headerlink" title="两个节点最近公共祖先"></a>两个节点最近公共祖先</h2><p><strong>难度：middle</strong></p><p><strong>考察次数：32</strong></p><p><a href="https://www.nowcoder.com/practice/e0cc33a83afe4530bcec46eba3325116?tpId=117&tqId=37826&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey"><strong>传送门</strong></a></p><p><strong>题目描述</strong><br>给定一棵二叉树以及这棵树上的两个节点 o1 和 o2，请找到 o1 和 o2 的最近公共祖先节点。 </p><p><strong>思路：</strong> 用一个map[i]记录以当前节点i为根，如果子树有一个所要求的节点则map[i]=1,两个则map[i]=2，从根节点深度优先搜索，第一个map为二的节点即为最近的公共祖先。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *int val;</span></span><br><span class="line"><span class="comment"> *struct TreeNode *left;</span></span><br><span class="line"><span class="comment"> *struct TreeNode *right;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param root TreeNode类 </span></span><br><span class="line"><span class="comment">     * @param o1 int整型 </span></span><br><span class="line"><span class="comment">     * @param o2 int整型 </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; ma;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(TreeNode* n,<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="literal">NULL</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n-&gt;val == a )ma[a]++;</span><br><span class="line"><span class="keyword">if</span> (n-&gt;val == b )ma[b]++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> g = ma[n-&gt;val] + <span class="built_in">dfs</span>(n-&gt;left, a, b) + <span class="built_in">dfs</span>(n-&gt;right, a, b);</span><br><span class="line"><span class="keyword">if</span> (f==<span class="number">-1</span> &amp;&amp; g &gt;= <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">f = n-&gt;val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f = <span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowestCommonAncestor</span><span class="params">(TreeNode* root, <span class="keyword">int</span> o1, <span class="keyword">int</span> o2)</span> </span>&#123;</span><br><span class="line"><span class="built_in">dfs</span>(root, o1, o2);</span><br><span class="line">    <span class="keyword">return</span> f;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="实现二叉树先中后序排列"><a href="#实现二叉树先中后序排列" class="headerlink" title="实现二叉树先中后序排列"></a>实现二叉树先中后序排列</h2><p><strong>难度：middle</strong></p><p><strong>考察次数：97</strong></p><p><a href="https://www.nowcoder.com/practice/a9fec6c46a684ad5a3abd4e365a9d362?tpId=117&tqId=37819&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey"><strong>传送门</strong></a></p><p><strong>题目描述</strong><br>分别按照二叉树先序，中序和后序打印所有的节点。</p><p><strong>思路：</strong> 深度优先搜索，先序遍历即每到一个节点优先访问当前的节点值，后续遍历最后访问当前节点值，中序遍历先访问左节点再访问当前节点值最后访问右节点。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *int val;</span></span><br><span class="line"><span class="comment"> *struct TreeNode *left;</span></span><br><span class="line"><span class="comment"> *struct TreeNode *right;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param root TreeNode类 the root of binary tree</span></span><br><span class="line"><span class="comment">     * @return int整型vector&lt;vector&lt;&gt;&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span> lst[<span class="number">4</span>][<span class="number">100005</span>];</span><br><span class="line">    <span class="keyword">int</span> g[<span class="number">4</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">preorder</span><span class="params">(TreeNode *p)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(p==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">        lst[<span class="number">1</span>][++g[<span class="number">1</span>]]=p-&gt;val;</span><br><span class="line">        <span class="built_in">preorder</span>(p-&gt;left);</span><br><span class="line">        <span class="built_in">preorder</span>(p-&gt;right);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pastorder</span><span class="params">(TreeNode *p)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(p==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">pastorder</span>(p-&gt;left);</span><br><span class="line">        <span class="built_in">pastorder</span>(p-&gt;right);</span><br><span class="line">        lst[<span class="number">3</span>][++g[<span class="number">3</span>]]=p-&gt;val;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inOrder</span><span class="params">(TreeNode* p)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(p==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">inOrder</span>(p-&gt;left);</span><br><span class="line">        lst[<span class="number">2</span>][++g[<span class="number">2</span>]]=p-&gt;val;</span><br><span class="line">        <span class="built_in">inOrder</span>(p-&gt;right);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt; &gt; <span class="built_in">threeOrders</span>(TreeNode* root) &#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        g[<span class="number">1</span>]=<span class="number">0</span>,g[<span class="number">2</span>]=<span class="number">0</span>,g[<span class="number">3</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">preorder</span>(root);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">inOrder</span>(root);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">pastorder</span>(root);</span><br><span class="line">            </span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            vector&lt;<span class="keyword">int</span>&gt; vec;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=g[i];j++)vec.<span class="built_in">push_back</span>(lst[i][j]);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(vec);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="二叉树之字形遍历"><a href="#二叉树之字形遍历" class="headerlink" title="二叉树之字形遍历"></a>二叉树之字形遍历</h2><p><strong>难度：middle</strong></p><p><strong>考察次数：37</strong></p><p><a href="https://www.nowcoder.com/practice/47e1687126fa461e8a3aff8632aa5559?tpId=117&tqId=37722&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey"><strong>传送门</strong></a></p><p><strong>题目描述</strong><br>给定一个二叉树，返回该二叉树的之字形层序遍历，（第一层从左向右，下一层从右向左，一直这样交替）<br>例如：<br>给定的二叉树是{3,9,20,#,#,15,7},</p><p>该二叉树之字形层序遍历的结果是</p><pre><code>[[3],[20,9],[15,7]]</code></pre><p><strong>思路：</strong> 每次遍历一层的节点保存到一个列表中，然后下一层要从相反方向遍历，那么只需从当前层的后面往前面遍历子节点即可（每个下一层都是前一层的相反方向就实现了之字形遍历了），还要注意每次到新的一层要改变一下遍历方向，比如这层先遍历左节点再右节点，下层先右节点再左节点。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *int val;</span></span><br><span class="line"><span class="comment"> *struct TreeNode *left;</span></span><br><span class="line"><span class="comment"> *struct TreeNode *right;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param root TreeNode类 </span></span><br><span class="line"><span class="comment">     * @return int整型vector&lt;vector&lt;&gt;&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt; &gt; <span class="built_in">zigzagLevelOrder</span>(TreeNode* root) &#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">NULL</span>)<span class="keyword">return</span> ans;</span><br><span class="line">        vector&lt;TreeNode*&gt; vec,t;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; lst&#123;root-&gt;val&#125;;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(lst);</span><br><span class="line">        vec.<span class="built_in">push_back</span>(root);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(!vec.<span class="built_in">empty</span>())</span><br><span class="line">        &#123;</span><br><span class="line">           t.<span class="built_in">clear</span>();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=vec.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f==<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">if</span>(vec[i]-&gt;right!=<span class="literal">NULL</span>)t.<span class="built_in">push_back</span>(vec[i]-&gt;right);</span><br><span class="line">                    <span class="keyword">if</span>(vec[i]-&gt;left!=<span class="literal">NULL</span>)t.<span class="built_in">push_back</span>(vec[i]-&gt;left);</span><br><span class="line">                        </span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">if</span>(vec[i]-&gt;left!=<span class="literal">NULL</span>)t.<span class="built_in">push_back</span>(vec[i]-&gt;left);</span><br><span class="line">                    <span class="keyword">if</span>(vec[i]-&gt;right!=<span class="literal">NULL</span>)t.<span class="built_in">push_back</span>(vec[i]-&gt;right);</span><br><span class="line">                        </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            vec=t;</span><br><span class="line">            vector&lt;<span class="keyword">int</span>&gt; tt;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vec.<span class="built_in">size</span>();i++)tt.<span class="built_in">push_back</span>(vec[i]-&gt;val);</span><br><span class="line">            <span class="keyword">if</span>(tt.<span class="built_in">size</span>()==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(tt);</span><br><span class="line">            f=-f;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="4-二分篇"><a href="#4-二分篇" class="headerlink" title="4.二分篇"></a>4.二分篇</h1><h2 id="求平方根"><a href="#求平方根" class="headerlink" title="求平方根"></a>求平方根</h2><p><strong>难度：easy</strong></p><p><strong>考察次数：27</strong></p><p><strong><a href="https://www.nowcoder.com/practice/09fbfb16140b40499951f55113f2166c?tpId=117&tqId=37734&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey">传送门</a></strong></p><p><strong>题目描述</strong><br>实现函数 int sqrt(int x).<br>计算并返回x的平方根（向下取整） </p><p><strong>思路：</strong> 初始化l=0,r=x。直接暴力二分100次，mid=(l+r)/2，如果mid*mid&lt;=x , l=x , 如果mid*mid&gt;x  ， r=mid。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param x int整型 </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sqrt</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        <span class="keyword">double</span> l=<span class="number">0</span>,r=x,m;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(++i&gt;=<span class="number">500</span>)<span class="keyword">break</span>;</span><br><span class="line">            m=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(m*m&gt;=x)r=m;</span><br><span class="line">            <span class="keyword">else</span> l=m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">floor</span>(r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="5-其他"><a href="#5-其他" class="headerlink" title="5.其他"></a>5.其他</h1><h2 id="岛屿数量"><a href="#岛屿数量" class="headerlink" title="岛屿数量"></a>岛屿数量</h2><p><strong>难度：middle</strong></p><p><strong>考察次数：24</strong></p><p><strong><a href="https://www.nowcoder.com/practice/0c9664d1554e466aa107d899418e814e?tpId=117&tqId=37833&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey">传送门</a></strong></p><p><strong>题目描述</strong></p><p>给一个01矩阵，1代表是陆地，0代表海洋， 如果两个1相邻，那么这两个1属于同一个岛。我们只考虑上下左右为相邻。<br>岛屿: 相邻陆地可以组成一个岛屿（相邻:上下左右） 判断岛屿个数。 </p><p><strong>思路：</strong> 用一个book[i][j]记录之前有没有遍历过该处，然后把整个矩阵暴力dfs一遍，遇到lst[i][j]==1则dfs该处，如果该处四周的元素有值为1的，则接着dfs搜索下去每搜索一个地方记录。最后当全部都遍历一遍看需要从矩阵进入遍历几次即为岛屿数量。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断岛屿数量</span></span><br><span class="line"><span class="comment">     * @param grid char字符型vector&lt;vector&lt;&gt;&gt; </span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span> book[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt; vec)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(book[n][m]||n&lt;<span class="number">0</span>||m&lt;<span class="number">0</span>||n&gt;x||m&gt;y)<span class="keyword">return</span>;</span><br><span class="line">    book[n][m]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n+<span class="number">1</span>&lt;=x&amp;&amp;vec[n+<span class="number">1</span>][m]==<span class="string">&#x27;1&#x27;</span>)<span class="built_in">dfs</span>(n+<span class="number">1</span>,m,vec);</span><br><span class="line">    <span class="keyword">if</span>(n<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;vec[n<span class="number">-1</span>][m]==<span class="string">&#x27;1&#x27;</span>)<span class="built_in">dfs</span>(n<span class="number">-1</span>,m,vec);</span><br><span class="line">    <span class="keyword">if</span>(m+<span class="number">1</span>&lt;=y&amp;&amp;vec[n][m+<span class="number">1</span>]==<span class="string">&#x27;1&#x27;</span>)<span class="built_in">dfs</span>(n,m+<span class="number">1</span>,vec);</span><br><span class="line">    <span class="keyword">if</span>(m<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;vec[n][m<span class="number">-1</span>]==<span class="string">&#x27;1&#x27;</span>)<span class="built_in">dfs</span>(n,m<span class="number">-1</span>,vec);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt; &gt;&amp; grid)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        x=grid.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        y=grid[<span class="number">0</span>].<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=x;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=y;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(book[i][j]==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(grid[i][j]==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">dfs</span>(i,j,grid);</span><br><span class="line">                        ans++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="最长无重复子串"><a href="#最长无重复子串" class="headerlink" title="最长无重复子串"></a>最长无重复子串</h2><p><strong>难度：middle</strong></p><p><strong>考察次数：52</strong></p><p><strong><a href="https://www.nowcoder.com/practice/b56799ebfd684fb394bd315e89324fb4?tpId=117&tqId=37816&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey">传送门</a></strong></p><p>题目描述<br>给定一个数组arr，返回arr的最长无的重复子串的长度(无重复指的是所有数字都不相同)。</p><p>思路：尺取法，用两个坐标记录当前子串前后，每次将前面的坐标往前挪动一格，发现有重复的则将后面的坐标往前收缩直到无重复。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param arr int整型vector the array</span></span><br><span class="line"><span class="comment">     * @return int整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxLength</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; ma;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ma[arr[i]]++;</span><br><span class="line">            <span class="keyword">if</span>(ma[arr[i]]&gt;=<span class="number">2</span>)sum++;</span><br><span class="line">            <span class="keyword">while</span>(sum!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> t=arr[j];</span><br><span class="line">                ma[arr[j++]]--;</span><br><span class="line">                <span class="keyword">if</span>(ma[t]==<span class="number">1</span>)sum--;</span><br><span class="line">             &#125;</span><br><span class="line">             </span><br><span class="line">            ans=<span class="built_in">max</span>(ans,i-j+<span class="number">1</span>);</span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="括号生成"><a href="#括号生成" class="headerlink" title="括号生成"></a>括号生成</h2><p><strong>难度：middle</strong></p><p><strong>考察次数：13</strong></p><p><strong><a href="https://www.nowcoder.com/practice/c9addb265cdf4cdd92c092c655d164ca?tpId=117&tqId=37748&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey">传送门</a></strong></p><p><strong>题目描述</strong><br>给出n对括号，请编写一个函数来生成所有的由n对括号组成的合法组合。<br>例如，给出n=3，解集为：<br>“((()))”, “(()())”, “(())()”, “()()()”, “()(())”, </p><p>思路：回溯+剪枝，用一个open代表左括号，close代表右括号，然后dfs遍历所有情况，细节见代码。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param n int整型 </span></span><br><span class="line"><span class="comment">     * @return string字符串vector</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> open,<span class="keyword">int</span> close,string str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(str.<span class="built_in">size</span>()==<span class="number">2</span>*len)ans.<span class="built_in">push_back</span>(str);</span><br><span class="line">        <span class="keyword">if</span>(open&lt;len)<span class="built_in">solve</span>(open+<span class="number">1</span>,close,str+<span class="string">&quot;(&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(close&lt;open)<span class="built_in">solve</span>(open,close+<span class="number">1</span>,str+<span class="string">&quot;)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">generateParenthesis</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        len=n;</span><br><span class="line">        <span class="built_in">solve</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="有重复数字的所有排列"><a href="#有重复数字的所有排列" class="headerlink" title="有重复数字的所有排列"></a>有重复数字的所有排列</h2><p><strong>难度：middle</strong></p><p><strong>考察次数：11</strong></p><p><strong><a href="https://www.nowcoder.com/practice/a43a2b986ef34843ac4fdd9159b69863?tpId=117&tqId=37739&companyId=146&rp=1&ru=/company/home/code/146&qru=/ta/job-code-high/question-ranking&tab=answerKey">传送门</a></strong></p><p><strong>题目描述</strong><br>给出一组可能包含重复项的数字，返回该组数字的所有排列。 </p><p>思路：回溯，标记好哪个数字被使用与否，暴力dfs，用一个map记录出现过的排列。</p><p><strong>AC code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">10005</span>],n;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; lst;</span><br><span class="line">    map&lt;vector&lt;<span class="keyword">int</span>&gt;,<span class="keyword">int</span>&gt; ma;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; vec,<span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(h==n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ma[vec]==<span class="number">0</span>)</span><br><span class="line">            &#123;ans.<span class="built_in">push_back</span>(vec);ma[vec]++;&#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                vector&lt;<span class="keyword">int</span>&gt; t;</span><br><span class="line">                t=vec;</span><br><span class="line">                vec.<span class="built_in">push_back</span>(lst[i]);</span><br><span class="line">                b[i]=<span class="number">1</span>;</span><br><span class="line">                <span class="built_in">solve</span>(vec,h+<span class="number">1</span>);</span><br><span class="line">                b[i]=<span class="number">0</span>;</span><br><span class="line">                vec=t;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt; &gt; <span class="built_in">permuteUnique</span>(vector&lt;<span class="keyword">int</span>&gt; &amp;num) &#123;</span><br><span class="line">        n=num.<span class="built_in">size</span>();</span><br><span class="line">        lst=num;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; ss; </span><br><span class="line">        <span class="built_in">solve</span>(ss,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;@&lt;a href=&quot;%E7%9B%AE%E5%BD%95&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-链表篇&quot;&gt;&lt;a href=&quot;#1-链表篇&quot; class=&quot;headerlink&quot; title=&quot;1.链表篇&quot;&gt;&lt;/a&gt;1.链表篇&lt;/h1&gt;&lt;h2 id=&quot;反转链表&quot;&gt;&lt;a href=&quot;#反转链表&quot; class=&quot;headerlink&quot; title=&quot;反转链表&quot;&gt;&lt;/a&gt;反转链表&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;难度：easy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;考察次数：189&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/practice/75e878df47f24fdc9dc3e400ec6058ca?tpId=117&amp;tqId=37777&amp;companyId=146&amp;rp=1&amp;ru=/company/home/code/146&amp;qru=/ta/job-code-high/question-ranking&amp;tab=answerKey&quot;&gt;&lt;strong&gt;传送门&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;题目描述&lt;/strong&gt;&lt;br&gt;输入一个链表，反转链表后，输出新链表的表头。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路&lt;/strong&gt;:创建三个指针，一个表示前一个结点pre，一个表示当前节点cur，一个表示后一个节点next。循环next=cur-&amp;gt;next，cur-&amp;gt;next=pre，pre=cur，cur=next，直到当前节点为NULL。&lt;/p&gt;</summary>
    
    
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="面试题" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>循环链表解决约瑟夫斯问题</title>
    <link href="http://example.com/2021/10/15/C%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E8%A7%A3%E5%86%B3%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/10/15/C%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E8%A7%A3%E5%86%B3%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98/</id>
    <published>2021-10-15T06:42:35.223Z</published>
    <updated>2021-10-15T06:59:39.216Z</updated>
    
    <content type="html"><![CDATA[<h2 id="循环链表解决约瑟夫斯问题"><a href="#循环链表解决约瑟夫斯问题" class="headerlink" title="循环链表解决约瑟夫斯问题"></a>循环链表解决约瑟夫斯问题</h2><p><strong>问题描述：设有n个人围坐成一个圆圈，按一定指向方向，从第s个人开始报数，数到m的人出列，然后从下一个人重新报数，数到m的人又出列，…，直到n个人全部出列为止。<br>输入：n m s，按次序输出得到的n个人的顺序表。</strong></p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> datetype;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>//构建链表节点 </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">datetype data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;ListNode,*LinkList;<span class="comment">//节点与表头指针</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateCircleLinkList</span><span class="params">(LinkList &amp;rear,<span class="keyword">int</span> n)</span><span class="comment">//创建链表 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ListNode *p,*pre;</span><br><span class="line">p = <span class="literal">NULL</span>;</span><br><span class="line">rear=pre= <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">p = <span class="keyword">new</span> ListNode;</span><br><span class="line">p-&gt;data = i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (rear == <span class="literal">NULL</span>) rear = p;</span><br><span class="line"><span class="keyword">if</span> (pre != <span class="literal">NULL</span>) pre-&gt; next= p;</span><br><span class="line">pre = p;</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;next = rear;<span class="comment">//循环链表的构建 </span></span><br><span class="line">pre = rear;<span class="comment">//pre 指向链首节点</span></span><br><span class="line">rear=p;<span class="comment">//rear 指向链尾节点 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">josephus</span><span class="params">(LinkList &amp;rear,<span class="keyword">int</span> m,<span class="keyword">int</span> s)</span><span class="comment">//约瑟夫斯 问题 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ListNode *p;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;s;i++)<span class="comment">//移到s-1个节点，从第s个人开始报数 </span></span><br><span class="line">&#123;</span><br><span class="line">rear=rear-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(rear-&gt;next!=rear)<span class="comment">//当循环链表不为一个节点 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;m;i++)<span class="comment">//移动m-1个人后再将第m个出列 </span></span><br><span class="line">&#123;</span><br><span class="line">rear=rear-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">p=rear-&gt;next;</span><br><span class="line">cout&lt;&lt;p-&gt;data&lt;&lt;<span class="string">&quot;  &quot;</span>;</span><br><span class="line">rear-&gt;next=p-&gt;next;<span class="comment">//将报到m的人出列</span></span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; rear-&gt;data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList rear;</span><br><span class="line"><span class="keyword">int</span> n,m,s;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in">CreateCircleLinkList</span>(rear,n);</span><br><span class="line"><span class="built_in">josephus</span>(rear,m,s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;循环链表解决约瑟夫斯问题&quot;&gt;&lt;a href=&quot;#循环链表解决约瑟夫斯问题&quot; class=&quot;headerlink&quot; title=&quot;循环链表解决约瑟夫斯问题&quot;&gt;&lt;/a&gt;循环链表解决约瑟夫斯问题&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;问题描述：设有n个人围坐成一个圆圈，按一定指向方向，从第s个人开始报数，数到m的人出列，然后从下一个人重新报数，数到m的人又出列，…，直到n个人全部出列为止。&lt;br&gt;输入：n m s，按次序输出得到的n个人的顺序表。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="c++" scheme="http://example.com/tags/c/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>八皇后问题</title>
    <link href="http://example.com/2021/10/15/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/10/15/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/</id>
    <published>2021-10-15T06:42:13.078Z</published>
    <updated>2021-10-15T06:59:47.238Z</updated>
    
    <content type="html"><![CDATA[<p>   <a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-381">八皇后问题（链接）</a></p><p>努比亚和苏丹没有子女，所以他要从一些有集成资格的继承者中挑选一个出来继承王位。他希望这个继承者足够聪明，所以他准备了一个西洋棋盘，上面的每个格子中均有一个 $1-99$ 的数字。他又准备了 $8$ 个皇后棋子。</p><span id="more"></span><p>$8$ 皇后的规则就是不能有任何棋子同行或者同列或者同斜线，在满足这个规则的同时，王位继承者还需要让 $8$ 个皇后所在的位置的数字的和是最大的。</p><p>输入格式</p><p>输入一个数字 $k(k\leq 20)$，代表棋盘的数量。</p><p>接下来有 $k$ 个棋盘，每个棋盘有 $64$ 个数字，分成 $8$ 行 $8$ 列出入，具体可见样例，每一个数字均小于 $100$。<br>输出格式</p><p>每一个棋盘对应输出最大的数值， 一共输出 $k$ 行。</p><p>源码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> Max = <span class="number">1e2</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> lst[Max][Max];</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> Inf = <span class="number">1e8</span> + <span class="number">5</span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; vec;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="keyword">int</span> cur[Max];<span class="comment">//记录每一行皇后所在列</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> h)</span><span class="comment">//第h行</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (h == <span class="number">9</span>)<span class="comment">//临界条件</span></span><br><span class="line">&#123;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) sum += lst[i][cur[i]];</span><br><span class="line">vec.<span class="built_in">push_back</span>(sum);  <span class="comment">//把每次结果加入vec</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++)<span class="comment">//把每一列尝试一遍</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; h; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == cur[j] || i + h == cur[j] + j || h - i == j - cur[j])<span class="comment">//检查是否和前面的皇后冲突</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cur[h] = i;<span class="comment">//记录</span></span><br><span class="line"><span class="keyword">if</span> (flag) <span class="built_in">dfs</span>(h + <span class="number">1</span>);<span class="comment">//符合条件则进入下一行</span></span><br><span class="line">cur[h] = <span class="number">0</span>;<span class="comment">//抹除记录，这个问题里不写也可</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line">vec.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">8</span>; j++) cin &gt;&gt; lst[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), greater&lt;<span class="keyword">int</span>&gt;());<span class="comment">//递减排序</span></span><br><span class="line">cout &lt;&lt; vec[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;   &lt;a href=&quot;https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-381&quot;&gt;八皇后问题（链接）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;努比亚和苏丹没有子女，所以他要从一些有集成资格的继承者中挑选一个出来继承王位。他希望这个继承者足够聪明，所以他准备了一个西洋棋盘，上面的每个格子中均有一个 $1-99$ 的数字。他又准备了 $8$ 个皇后棋子。&lt;/p&gt;</summary>
    
    
    
    
    <category term="c++" scheme="http://example.com/tags/c/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>二叉树顺序存储、链式存储及之间的转化</title>
    <link href="http://example.com/2021/10/15/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E3%80%81%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E5%8F%8A%E4%B9%8B%E9%97%B4%E8%BD%AC%E5%8C%96%E4%B8%8E%E9%81%8D%E5%8E%86%E3%80%82/"/>
    <id>http://example.com/2021/10/15/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E3%80%81%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E5%8F%8A%E4%B9%8B%E9%97%B4%E8%BD%AC%E5%8C%96%E4%B8%8E%E9%81%8D%E5%8E%86%E3%80%82/</id>
    <published>2021-10-15T06:42:13.075Z</published>
    <updated>2021-10-15T06:59:52.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二叉树顺序存储、链式存储及之间转化与遍历。"><a href="#二叉树顺序存储、链式存储及之间转化与遍历。" class="headerlink" title="二叉树顺序存储、链式存储及之间转化与遍历。"></a>二叉树顺序存储、链式存储及之间转化与遍历。</h2><p><strong>二叉树的存储可用顺序存储方式和链式存储方式，其中顺序存储时存储地址相邻，空间利用率高，但不易进行元素的增删等操作。而链式存储方式的元素可随意存放，但其存储空间所占为数据元素和指针所占空间，存储空间利用率低。</strong></p><span id="more"></span><p><strong>数据图如下</strong></p><p><img src="https://img-blog.csdnimg.cn/2020042816244280.png" alt="在这里插入图片描述"></p><p><strong>完整程序–转化算法如下</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;<span class="comment">//将队列的节点类型设置为字符型 </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">datatype data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">rchild</span>, * <span class="title">lchild</span>;</span></span><br><span class="line">&#125;BTNode, * BinTree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elem</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">datatype data;</span><br><span class="line"><span class="keyword">int</span> lchild, rchild;</span><br><span class="line"><span class="keyword">int</span> tag;<span class="comment">//标记是否已申请节点 </span></span><br><span class="line">BTNode* link;</span><br><span class="line">&#125;element;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数声明*/</span></span><br><span class="line"><span class="function">element* <span class="title">CreateBinaryTree</span><span class="params">(<span class="keyword">int</span> n)</span></span>;<span class="comment">//创建顺序结构二叉树 </span></span><br><span class="line"><span class="function">BinTree <span class="title">exchange</span><span class="params">(element* ele, <span class="keyword">int</span> n)</span></span>;<span class="comment">//二叉树线性结构转为二叉结构 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">(BTNode* p)</span></span>;<span class="comment">//前序遍历 (递归)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(BTNode* p)</span></span>;<span class="comment">//中序遍历 (递归) </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(BTNode* p)</span></span>;<span class="comment">//后续遍历(递归) </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BinTree root;</span><br><span class="line">element* ele;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;创建树的节点为：&quot;</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">ele = <span class="built_in">CreateBinaryTree</span>(n);</span><br><span class="line">root = <span class="built_in">exchange</span>(ele, n);</span><br><span class="line"><span class="built_in">PreOrder</span>(root);</span><br><span class="line"><span class="built_in">InOrder</span>(root);</span><br><span class="line"><span class="built_in">PostOrder</span>(root);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建顺序结构二叉树 </span></span><br><span class="line"><span class="function">element* <span class="title">CreateBinaryTree</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">element* ele = <span class="keyword">new</span> element[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;依次输入第&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;个节点的数据 左子树 右子树&quot;</span>;</span><br><span class="line">cin &gt;&gt; ele[i].data &gt;&gt; ele[i].lchild &gt;&gt; ele[i].rchild;</span><br><span class="line">ele[i].tag = <span class="number">0</span>;</span><br><span class="line">ele[i].link = <span class="literal">NULL</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ele;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二叉树线性结构转为二叉结构</span></span><br><span class="line"><span class="function">BinTree <span class="title">exchange</span><span class="params">(element* ele, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line">BTNode* p, * rchild, * lchild;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ele[i].tag == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">p = <span class="keyword">new</span> BTNode;</span><br><span class="line">ele[i].link = p;</span><br><span class="line">ele[i].tag = <span class="number">1</span>;</span><br><span class="line">p-&gt;data = ele[i].data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">p = ele[i].link;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ele[i].lchild != <span class="number">-1</span>)<span class="comment">//如果当前节点左子树存在 </span></span><br><span class="line">&#123;</span><br><span class="line">j = ele[i].lchild;</span><br><span class="line">lchild = <span class="keyword">new</span> BTNode;</span><br><span class="line">ele[j].link = lchild;</span><br><span class="line">ele[j].tag = <span class="number">1</span>;</span><br><span class="line">lchild-&gt;data = ele[j].data;</span><br><span class="line">p-&gt;lchild = lchild;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">p-&gt;lchild = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ele[i].rchild != <span class="number">-1</span>)<span class="comment">//如果当前节点右子树存在 </span></span><br><span class="line">&#123;</span><br><span class="line">j = ele[i].rchild;</span><br><span class="line">rchild = <span class="keyword">new</span> BTNode;</span><br><span class="line">ele[j].link = rchild;</span><br><span class="line">ele[j].tag = <span class="number">1</span>;</span><br><span class="line">rchild-&gt;data = ele[j].data;</span><br><span class="line">p-&gt;rchild = rchild;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">p-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ele[<span class="number">0</span>].link;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//前序遍历 (递归)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">(BTNode* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; p-&gt;data;</span><br><span class="line"><span class="built_in">PreOrder</span>(p-&gt;lchild);</span><br><span class="line"><span class="built_in">PreOrder</span>(p-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中序遍历 (递归) </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(BTNode* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">InOrder</span>(p-&gt;lchild);</span><br><span class="line">cout &lt;&lt; p-&gt;data;</span><br><span class="line"><span class="built_in">InOrder</span>(p-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后续遍历(递归) </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(BTNode* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">PostOrder</span>(p-&gt;lchild);</span><br><span class="line"><span class="built_in">PostOrder</span>(p-&gt;rchild);</span><br><span class="line">cout &lt;&lt; p-&gt;data;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>数据图的运行结果</strong></p><p><img src="https://img-blog.csdnimg.cn/20200428162110724.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200428161948299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如有问题，欢迎指正。</p><p>相关参考资料《数据结构》—周颜军</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;二叉树顺序存储、链式存储及之间转化与遍历。&quot;&gt;&lt;a href=&quot;#二叉树顺序存储、链式存储及之间转化与遍历。&quot; class=&quot;headerlink&quot; title=&quot;二叉树顺序存储、链式存储及之间转化与遍历。&quot;&gt;&lt;/a&gt;二叉树顺序存储、链式存储及之间转化与遍历。&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;二叉树的存储可用顺序存储方式和链式存储方式，其中顺序存储时存储地址相邻，空间利用率高，但不易进行元素的增删等操作。而链式存储方式的元素可随意存放，但其存储空间所占为数据元素和指针所占空间，存储空间利用率低。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="c++" scheme="http://example.com/tags/c/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>二叉排序树的实现</title>
    <link href="http://example.com/2021/10/15/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%8A%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%85%B6%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2021/10/15/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%8A%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%85%B6%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</id>
    <published>2021-10-15T06:42:13.073Z</published>
    <updated>2021-10-15T06:59:55.054Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题描述及要求</strong><br>        产生一个菜单驱动的演示程序，用以说明二叉树的使用。元素由单个键组成，键为单个字符。用户能演示的二叉树基本操作至少包括：构造二叉树，按先序、中序、后序、层序遍历这棵二叉树，求二叉树的深度、宽度，统计度为0，1，2的结点数等。二叉树采用链式存储结构。对二叉查找树做上述工作，且增加以下操作：插入、删除给定键的元素、查找目标键。    </p><span id="more"></span><p>由于没使用类模板，请使用二叉树演示时此处为char<br><img src="https://img-blog.csdnimg.cn/20201111182959297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">而使用二叉排序树时将char 改为int。</p><p><strong>Code</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> h,ht, d1, d2, d0;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">datatype data;</span><br><span class="line">BiNode *lchild, *rchild;</span><br><span class="line">&#125;;</span><br><span class="line">BiNode* fa;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BiTree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">BiTree</span>() &#123; root = <span class="built_in">Create</span>(); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">()</span> </span>&#123; <span class="built_in">PreOrder</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">()</span> </span>&#123; <span class="built_in">InOrder</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">()</span> </span>&#123; <span class="built_in">PostOrder</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LevelOrder</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IterativePreorder</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_high</span><span class="params">()</span> </span>&#123; h = <span class="number">0</span>;<span class="built_in">get_high</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_node</span><span class="params">()</span> </span>&#123; d0 = d1 = d2 = <span class="number">0</span>;<span class="built_in">get_node</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_width</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function">BiNode* <span class="title">Create</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Release</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_high</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_node</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line">BiNode* root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::IterativePreorder</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiNode* stack[Max];</span><br><span class="line"><span class="keyword">int</span> top = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (root == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">stack[++top] = root;</span><br><span class="line"><span class="keyword">while</span> (top!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">BiNode* p = stack[top];</span><br><span class="line">cout &lt;&lt; p-&gt;data &lt;&lt; endl;</span><br><span class="line">top--;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;rchild != <span class="literal">NULL</span>)stack[++top] = p-&gt;rchild;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;lchild != <span class="literal">NULL</span>)stack[++top] = p-&gt;lchild;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::get_node</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt-&gt;lchild != <span class="literal">NULL</span> &amp;&amp; bt-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">d2++;</span><br><span class="line"><span class="built_in">get_node</span>(bt-&gt;lchild);</span><br><span class="line"><span class="built_in">get_node</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (bt-&gt;lchild!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">d1++;</span><br><span class="line"><span class="built_in">get_node</span>(bt-&gt;lchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (bt-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">d1++;</span><br><span class="line"><span class="built_in">get_node</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">d0++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::get_high</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ht++;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (bt-&gt;lchild == <span class="literal">NULL</span> &amp;&amp; bt-&gt;rchild == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">h = <span class="built_in">max</span>(h, ht);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">get_high</span>(bt-&gt;lchild);</span><br><span class="line">ht--;</span><br><span class="line"><span class="built_in">get_high</span>(bt-&gt;rchild);</span><br><span class="line">ht--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::PreOrder</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; bt-&gt;data &lt;&lt; endl;</span><br><span class="line"><span class="built_in">PreOrder</span>(bt-&gt;lchild);</span><br><span class="line"><span class="built_in">PreOrder</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::InOrder</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">InOrder</span>(bt-&gt;lchild);</span><br><span class="line">cout &lt;&lt; bt-&gt;data &lt;&lt; endl;</span><br><span class="line"><span class="built_in">InOrder</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::PostOrder</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">PostOrder</span>(bt-&gt;lchild);</span><br><span class="line"><span class="built_in">PostOrder</span>(bt-&gt;rchild);</span><br><span class="line">cout &lt;&lt; bt-&gt;data &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::LevelOrder</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiNode* Q[Max], * q = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> front = <span class="number">-1</span>, rear = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (root == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">Q[++rear] = root;</span><br><span class="line"><span class="keyword">while</span> (front != rear)</span><br><span class="line">&#123;</span><br><span class="line">q = Q[++front];</span><br><span class="line">cout &lt;&lt; q-&gt;data &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;lchild != <span class="literal">NULL</span>)Q[++rear] = q-&gt;lchild;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;rchild != <span class="literal">NULL</span>)Q[++rear] = q-&gt;rchild;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BiNode* <span class="title">BiTree::Create</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiNode* bt;</span><br><span class="line">datatype ch;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;#&#x27;</span>)bt = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">bt = <span class="keyword">new</span> BiNode;</span><br><span class="line">bt-&gt;data = ch;</span><br><span class="line">bt-&gt;lchild = <span class="built_in">Create</span>();</span><br><span class="line">bt-&gt;rchild = <span class="built_in">Create</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BiSortTree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">BiSortTree</span>(<span class="keyword">int</span> a[], <span class="keyword">int</span> n);</span><br><span class="line"><span class="comment">//~BiSortTree() &#123; Release(root); &#125;</span></span><br><span class="line"><span class="function">BiNode* <span class="title">InsertBST</span><span class="params">(datatype x)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">InsertBST</span>(root, x); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteBST</span><span class="params">(datatype x)</span></span>;</span><br><span class="line"><span class="function">BiNode* <span class="title">SearchBST</span><span class="params">(datatype x)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">SearchBST</span>(root, x); &#125;</span><br><span class="line"><span class="function">BiNode* <span class="title">find</span><span class="params">(<span class="keyword">const</span> datatype key)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">find</span>(root, key); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">()</span> </span>&#123; <span class="built_in">PreOrder</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">()</span> </span>&#123; <span class="built_in">InOrder</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">()</span> </span>&#123; <span class="built_in">PostOrder</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LevelOrder</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_high</span><span class="params">()</span> </span>&#123; h = <span class="number">0</span>;<span class="built_in">get_high</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_node</span><span class="params">()</span> </span>&#123; d0 = d1 = d2 = <span class="number">0</span>;<span class="built_in">get_node</span>(root); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_width</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function">BiNode* <span class="title">InsertBST</span><span class="params">(BiNode* bt, datatype x)</span></span>;</span><br><span class="line"><span class="function">BiNode* <span class="title">SearchBST</span><span class="params">(BiNode* bt, datatype x)</span></span>;</span><br><span class="line"><span class="function">BiNode* <span class="title">find</span><span class="params">(BiNode* root, <span class="keyword">const</span> datatype key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_high</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_node</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Release</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(BiNode* bt)</span></span>;</span><br><span class="line">BiNode* root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BiNode* <span class="title">BiSortTree::SearchBST</span><span class="params">(BiNode* bt, datatype x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (bt-&gt;data == x)<span class="keyword">return</span> bt;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (bt-&gt;data &gt; x)<span class="keyword">return</span> <span class="built_in">SearchBST</span>(bt-&gt;lchild, x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">SearchBST</span>(bt-&gt;rchild, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BiNode* <span class="title">BiSortTree::InsertBST</span><span class="params">(BiNode* bt, datatype x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">BiNode* s = <span class="keyword">new</span> BiNode;</span><br><span class="line">s-&gt;data = x;</span><br><span class="line">s-&gt;lchild = s-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">bt = s;</span><br><span class="line"><span class="keyword">return</span> bt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (bt-&gt;data &gt; x)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bt-&gt;lchild == <span class="literal">NULL</span>)bt-&gt;lchild = <span class="built_in">InsertBST</span>(bt-&gt;lchild, x);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">InsertBST</span>(bt-&gt;lchild, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bt-&gt;rchild == <span class="literal">NULL</span>)bt-&gt;rchild = <span class="built_in">InsertBST</span>(bt-&gt;rchild, x);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">InsertBST</span>(bt-&gt;rchild, x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BiSortTree::<span class="built_in">BiSortTree</span>(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">root = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>) root = <span class="built_in">InsertBST</span>(root, a[i]);<span class="comment">//在插入操作时，当root节点为空时分配根节点空间，并且root的地址不会改变。</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">InsertBST</span>(root, a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BiNode* <span class="title">BiSortTree::find</span><span class="params">(BiNode* root,<span class="keyword">const</span> datatype key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fa = <span class="literal">NULL</span>;</span><br><span class="line">BiNode* cur = root;</span><br><span class="line"><span class="keyword">while</span> (cur != <span class="literal">NULL</span> &amp;&amp; cur-&gt;data != key)</span><br><span class="line">&#123;</span><br><span class="line">fa = cur;</span><br><span class="line"><span class="keyword">if</span> (key &gt; cur-&gt;data)cur = cur-&gt;rchild;</span><br><span class="line"><span class="keyword">else</span> cur = cur-&gt;lchild;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (cur == <span class="literal">NULL</span>)<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiSortTree::DeleteBST</span><span class="params">(datatype x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiNode* p = <span class="built_in">find</span>(x);</span><br><span class="line"><span class="keyword">if</span> ((p-&gt;lchild == <span class="literal">NULL</span>) &amp;&amp; (p-&gt;rchild == <span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (fa == <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (fa-&gt;lchild == p)fa-&gt;lchild = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (fa-&gt;rchild == p)fa-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">delete</span> p;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;rchild == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (fa == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">root = p-&gt;lchild;</span><br><span class="line"><span class="keyword">delete</span> p;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (fa-&gt;lchild == p)fa-&gt;lchild = p-&gt;lchild;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (fa-&gt;rchild == p)fa-&gt;rchild = p-&gt;lchild;</span><br><span class="line"><span class="keyword">delete</span> p;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;lchild == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (fa == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">root = p-&gt;rchild;</span><br><span class="line"><span class="keyword">delete</span> p;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (fa-&gt;lchild == p)fa-&gt;lchild = p-&gt;rchild;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (fa-&gt;rchild == p)fa-&gt;rchild = p-&gt;rchild;</span><br><span class="line"><span class="keyword">delete</span> p;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">BiNode* par = p, * s = p-&gt;lchild;</span><br><span class="line"><span class="keyword">while</span> (s-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">par = s;</span><br><span class="line">s = s-&gt;rchild;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (par-&gt;lchild == s)par-&gt;lchild = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (par-&gt;rchild == s)par-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">p-&gt;data = s-&gt;data;</span><br><span class="line"><span class="keyword">if</span> (par == p)par-&gt;lchild = s-&gt;lchild;</span><br><span class="line"><span class="keyword">else</span> par-&gt;rchild = s-&gt;lchild;</span><br><span class="line"><span class="keyword">delete</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiSortTree::get_node</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt-&gt;lchild != <span class="literal">NULL</span> &amp;&amp; bt-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">d2++;</span><br><span class="line"><span class="built_in">get_node</span>(bt-&gt;lchild);</span><br><span class="line"><span class="built_in">get_node</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (bt-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">d1++;</span><br><span class="line"><span class="built_in">get_node</span>(bt-&gt;lchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (bt-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">d1++;</span><br><span class="line"><span class="built_in">get_node</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">d0++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiSortTree::get_high</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ht++;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (bt-&gt;lchild == <span class="literal">NULL</span> &amp;&amp; bt-&gt;rchild == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">h = <span class="built_in">max</span>(h, ht);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">get_high</span>(bt-&gt;lchild);</span><br><span class="line">ht--;</span><br><span class="line"><span class="built_in">get_high</span>(bt-&gt;rchild);</span><br><span class="line">ht--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiSortTree::PreOrder</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; bt-&gt;data &lt;&lt; endl;</span><br><span class="line"><span class="built_in">PreOrder</span>(bt-&gt;lchild);</span><br><span class="line"><span class="built_in">PreOrder</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiSortTree::InOrder</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">PreOrder</span>(bt-&gt;lchild);</span><br><span class="line">cout &lt;&lt; bt-&gt;data &lt;&lt; endl;</span><br><span class="line"><span class="built_in">PreOrder</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiSortTree::PostOrder</span><span class="params">(BiNode* bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">PreOrder</span>(bt-&gt;lchild);</span><br><span class="line"><span class="built_in">PreOrder</span>(bt-&gt;rchild);</span><br><span class="line">cout &lt;&lt; bt-&gt;data &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiSortTree::LevelOrder</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiNode* Q[Max], * q = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> front = <span class="number">-1</span>, rear = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (root == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">Q[++rear] = root;</span><br><span class="line"><span class="keyword">while</span> (front != rear)</span><br><span class="line">&#123;</span><br><span class="line">q = Q[++front];</span><br><span class="line">cout &lt;&lt; q-&gt;data &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;lchild != <span class="literal">NULL</span>)Q[++rear] = q-&gt;lchild;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;rchild != <span class="literal">NULL</span>)Q[++rear] = q-&gt;rchild;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">project</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选择演示二叉树输入：1&quot;</span> &lt;&lt; endl &lt;&lt; <span class="string">&quot;选择演示二叉查找树输入：2&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec;cin &gt;&gt; sec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sec == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请先创建二叉树&quot;</span> &lt;&lt; <span class="string">&quot;输入根节点后依次输入左子树结点和右子树结点，如果空则输入#&quot;</span> &lt;&lt; endl;</span><br><span class="line">BiTree tree;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：1输出前序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：2输出中序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：3输出后序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：4输出层序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：5输出度为0、1、2的结点数&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：6输出树的高度&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：7输出前序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：8输出树的宽度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec;cin &gt;&gt; sec;</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (sec)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">tree.<span class="built_in">PreOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">tree.<span class="built_in">InOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">tree.<span class="built_in">PostOrder</span>();<span class="comment">//tree.IterativePreorder();非递归</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">tree.<span class="built_in">LevelOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">tree.<span class="built_in">InOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">tree.<span class="built_in">get_high</span>();cout &lt;&lt; <span class="string">&quot;树的高度为&quot;</span> &lt;&lt; h &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">tree.<span class="built_in">get_node</span>();cout &lt;&lt; <span class="string">&quot;度为0结点数：&quot;</span> &lt;&lt; d0 &lt;&lt; <span class="string">&quot;度为1结点数：&quot;</span> &lt;&lt; d1 &lt;&lt; <span class="string">&quot;度为2结点数：&quot;</span> &lt;&lt; d2 &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;退出输入：1，继续操作输入：0&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> f;cin &gt;&gt; f;</span><br><span class="line"><span class="keyword">if</span> (f)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sec == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请先创建二叉排序树&quot;</span> &lt;&lt; <span class="string">&quot;先输入要输入结点的个数，再输入一组整数以空格隔开&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> lst[Max];</span><br><span class="line"><span class="keyword">int</span> n;cin &gt;&gt; n;<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)cin &gt;&gt; lst[i];</span><br><span class="line"><span class="function">BiSortTree <span class="title">tree</span><span class="params">(lst,n)</span></span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：1输出前序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：2输出中序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：3输出后序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：4输出层序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：5输出度为0、1、2的结点数&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：6输出树的高度&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：7输出前序遍历&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：8输出树的宽度&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：9增加一个结点&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：10删除一个结点&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入：11查找一个结点&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec;cin &gt;&gt; sec;cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (sec)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">tree.<span class="built_in">PreOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">tree.<span class="built_in">InOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">tree.<span class="built_in">PostOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">tree.<span class="built_in">LevelOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">tree.<span class="built_in">get_node</span>();cout &lt;&lt; <span class="string">&quot;度为0结点数：&quot;</span> &lt;&lt; d0 &lt;&lt; <span class="string">&quot;度为1结点数：&quot;</span> &lt;&lt; d1 &lt;&lt; <span class="string">&quot;度为2结点数：&quot;</span> &lt;&lt; d2 &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">tree.<span class="built_in">get_high</span>();cout &lt;&lt; <span class="string">&quot;树的高度为&quot;</span> &lt;&lt; h &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">tree.<span class="built_in">PreOrder</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入想要加入的结点&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> x;cin &gt;&gt; x;</span><br><span class="line">tree.<span class="built_in">InsertBST</span>(x);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入想要删除的结点&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> xx;cin &gt;&gt; xx;</span><br><span class="line">tree.<span class="built_in">DeleteBST</span>(xx);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入想要查找的结点&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> xxx;cin &gt;&gt; xxx;<span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (tree.<span class="built_in">find</span>(xxx) == <span class="literal">NULL</span>)cout &lt;&lt; <span class="string">&quot;无此结点&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;存在此节点&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;退出输入：1，继续操作输入：0&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> f;cin &gt;&gt; f;</span><br><span class="line"><span class="keyword">if</span> (f)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">project</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;问题描述及要求&lt;/strong&gt;&lt;br&gt;        产生一个菜单驱动的演示程序，用以说明二叉树的使用。元素由单个键组成，键为单个字符。用户能演示的二叉树基本操作至少包括：构造二叉树，按先序、中序、后序、层序遍历这棵二叉树，求二叉树的深度、宽度，统计度为0，1，2的结点数等。二叉树采用链式存储结构。对二叉查找树做上述工作，且增加以下操作：插入、删除给定键的元素、查找目标键。    &lt;/p&gt;</summary>
    
    
    
    
    <category term="c++" scheme="http://example.com/tags/c/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>文字交互电子宠物游戏</title>
    <link href="http://example.com/2021/10/14/%E7%94%B5%E5%AD%90%E5%AE%A0%E7%89%A9%E6%B8%B8%E6%88%8F%EF%BC%88%E9%99%84C++%E6%BA%90%E7%A0%81%EF%BC%89/"/>
    <id>http://example.com/2021/10/14/%E7%94%B5%E5%AD%90%E5%AE%A0%E7%89%A9%E6%B8%B8%E6%88%8F%EF%BC%88%E9%99%84C++%E6%BA%90%E7%A0%81%EF%BC%89/</id>
    <published>2021-10-14T14:48:02.261Z</published>
    <updated>2021-10-15T06:59:57.941Z</updated>
    
    <content type="html"><![CDATA[<pre><code>                     电子宠物游戏</code></pre><p>设计一款文字式交互电子宠物游戏，该游戏要求具备如下要素：</p><p>一、玩家（Player），玩家具备如下要素：<br>体力：体力是玩家行动的关键要素，玩家最高拥有100点体力值，每种不同行动都会消耗体力，一旦体力归0，玩家只能选择休息恢复体力。</p><p>金钱：金钱是购买宠物道具的要素，金钱可以通过打工获取。</p><p>行动：玩家可以在一个时间点选择一个行动，每种行动均会获取一定内容并且消耗当前时间：</p><span id="more"></span><p>1)打工，打工会消耗玩家体力，收获金钱，消耗时间。<br>家教，消耗2个时间，获取50金钱，消耗30体力<br>麦当劳兼职，消耗个4时间，获取120金钱，消耗70体力<br>割草，消耗1个时间，获取20金钱，消耗20体力<br>请你设计。</p><p>2)购买宠物粮食，玩家消耗1个时间，20体力，根据具体宠物粮食消耗金钱。</p><p>3)喂食：玩家消耗1个时间，20体力。</p><p>4)休息，玩家消耗1个时间，恢复50体力。</p><p>5)和宠物玩耍：玩家消耗1个时间，50体力。</p><p>6)清洗宠物：玩家消耗1个时间，30体力。</p><p>7)每天结束时，玩家会进入睡眠状态，睡眠会恢复玩家全部体力，并进入下一天。</p><p>二、宠物（Pet），当前电子系统仅支持宠物猫（Cat）和宠物狗（Dog）两种宠物，但是系统必须拥有扩展宠物的能力，宠物具备如下要素：</p><p>性别：公/母</p><p>饱食度：宠物的饱食度为0时，会降低10点愉悦度，猫会降低1斤体重，狗会降低2斤体重。宠物饱食度为100时，猫会提高1斤体重，狗会提高2斤体重。宠物被喂食会根据投喂的食物提高一定饱食度。宠物玩耍后会根据玩耍和宠物自身情况降低饱食度。</p><p>愉悦度：愉悦度影响宠物对玩家的态度，愉悦度为0时，宠物会离开主人；愉悦度低于30时，宠物不会和主人玩耍；愉悦度低于70时，宠物狗不会让主人清洗；宠物猫的愉悦度必须90以上，才会让主人清洗。</p><p>体重：体重是衡量宠物的健康，公猫健康体重为8<del>12斤，初始时公猫为10斤，母猫健康体重为4</del>8斤，初始时母猫为6斤。公猫体重低于4斤，高于16斤将会因为健康不佳死亡，母猫体重低于2斤，高于10斤将会因为健康死亡。狗健康体重为30~60斤，初始时狗会有45斤体重。低于15斤，高于75斤，狗会因为健康死亡。宠物低于超出健康体重时，每个时间段都会降低10点愉悦度。</p><p>清洁度：清洁度为0时，宠物愉悦度每个时间段降低30，清洁度高于80时，宠物愉悦度每个时间段升高10。</p><p>宠物行为：<br>1)玩耍：宠物狗玩耍时，会消耗40点饱食度，提高70点愉悦度，降低10点清洁度。宠物猫玩耍时，会消耗20点饱食度，提高30点愉悦度（猫是高冷的），降低10点清洁度。</p><p>2)叫：狗是汪汪叫，猫是喵喵叫（这里只需要printf信息表示即可）</p><p>3)喂食：消耗1个时间，喂食时，宠物会先叫，然后会根据提供食物不同获取属性。</p><p>4)猫的自洁：猫有30%的可能性进行自洁，消耗1个时间，提高30清洁度；</p><p>5)猫的随机抓老鼠：在任何时间段，猫有20%的可能会去抓老鼠，此时主人是无法对猫进行交互的。消耗1个时间，如果此时猫的饱食度低于50，会吃掉老鼠，提高40饱食度，降低30清洁度，提高5愉悦度。如果此时猫的饱食度大于等于50，猫只会玩耍老鼠，降低20饱食度，降低10清洁度，提高40愉悦度。</p><p>6)被主人清洁：消耗1个时间，提高100清洁度。但是对于猫，清洁度高于80或清洁间隔低于30个时间段时，不接受被主人清洁，强行清洁会降低50愉悦度（猫主子不喜欢）</p><p>7)非主人交互时间：该时间段一般为主人买东西、打工或休息等无暇顾及宠物的时间段，该时间段内宠物将降低20饱食度，另外，狗降低20点愉悦度，和20点清洁度。猫不会降低愉悦度，但是会降低5清洁度。</p><p>8)每天结束时，宠物会强制进入休息，提高30愉悦度，降低5清洁度，降低60饱食度。</p><p>三、宠物食物<br>粗糙的粮食：花费30金钱，为宠物提供30体力，10愉悦度，降低15清洁度；<br>精品粮食：花费60金钱，为宠物提供50体力，40愉悦度，降低5清洁度；<br>香肠：花费20金钱，为宠物提供20体力，30愉悦度，降低20清洁度；<br>其他可自行设计</p><p>四、系统<br>游戏开始时，系统给予玩家选择宠物和宠物性别的机会</p><p>一天提供7个时间段给玩家选择行动方案，一旦玩家选择并确定某种行动方案，视作时间段开始，此时，时间会发生对应的流逝。每个时间段开始前，系统必须显示当时玩家和宠物的状态。</p><p>一旦宠物死亡，游戏结束。三十天后，宠物依然健康，游戏结束，并结算显示宠物状态。</p><p>系统提供存档、读档、关闭、重新开始等功能</p><p>效果图如下：</p><p><img src="https://img-blog.csdnimg.cn/20200705000640244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200705000831813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>源码如下(可直接运行)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> random(x) (rand()%x)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>//存储文档数据的结构体</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">string sort;</span><br><span class="line"><span class="keyword">int</span> day;</span><br><span class="line"><span class="keyword">int</span> strength, money, time;</span><br><span class="line">map&lt;string, <span class="keyword">int</span>&gt; foods;</span><br><span class="line">string sex;</span><br><span class="line"><span class="keyword">int</span> satiety;</span><br><span class="line"><span class="keyword">int</span> happiness;</span><br><span class="line"><span class="keyword">int</span> cleanliness;</span><br><span class="line"><span class="keyword">int</span> weight;</span><br><span class="line">&#125;datas;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//全部类的声明</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">player</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pet</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cat</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dog</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">interactCat</span><span class="params">(cat&amp; pe, player&amp; pl, <span class="keyword">int</span> day)</span></span>;      <span class="comment">//player类与cat类的交互函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">interactdog</span><span class="params">(dog&amp; pe, player&amp; pl, <span class="keyword">int</span> day)</span></span>;      <span class="comment">//player类与dog类的交互函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getData</span><span class="params">(<span class="keyword">const</span> string&amp; filename, datas&amp; data)</span></span>;   <span class="comment">//文档的读取函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putData</span><span class="params">(<span class="keyword">const</span> string&amp; filename, datas data)</span></span>;    <span class="comment">//文档的存储函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adopt</span><span class="params">()</span></span>;                                        <span class="comment">//开始新的游戏函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">continueAdopt</span><span class="params">(datas da)</span></span>;                        <span class="comment">//接着之前的存储继续游戏函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">food</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string name;              <span class="comment">//食物的名字</span></span><br><span class="line"><span class="keyword">int</span> payMoney;  <span class="comment">//购买食物所花费的金钱</span></span><br><span class="line"><span class="keyword">int</span> addStrength;          <span class="comment">//吃掉食物所补充的体力</span></span><br><span class="line"> <span class="keyword">int</span> addHappiness;         <span class="comment">//吃掉食物所增加的愉悦度</span></span><br><span class="line"><span class="keyword">int</span> reduceCleanliness;    <span class="comment">//吃掉食物所减少的清洁度</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">food</span>(string n, <span class="keyword">int</span> p, <span class="keyword">int</span> as, <span class="keyword">int</span> ah, <span class="keyword">int</span> rc) :<span class="built_in">name</span>(n), <span class="built_in">payMoney</span>(p),</span><br><span class="line"><span class="built_in">addStrength</span>(as), <span class="built_in">addHappiness</span>(ah), <span class="built_in">reduceCleanliness</span>(rc) &#123;&#125;;</span><br><span class="line"><span class="function">string <span class="title">getName</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> name; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getPayMoney</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> payMoney; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getAddStrength</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> addStrength; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getAddHappiness</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> addHappiness; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getReduceCleanliness</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> reduceCleanliness; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">food petfood[<span class="number">5</span>] =<span class="comment">//食物列表</span></span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;粗糙的粮食&quot;</span>,<span class="number">30</span>,<span class="number">30</span>,<span class="number">10</span>,<span class="number">15</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;精品粮食&quot;</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">5</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;香肠&quot;</span>,<span class="number">20</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">20</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;辣条&quot;</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">5</span>,<span class="number">30</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;老八秘制小汉堡&quot;</span>,<span class="number">28</span>,<span class="number">66</span>,<span class="number">-30</span>,<span class="number">66</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">player</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> strength, money, time;   <span class="comment">//玩家的体力、金钱和时间</span></span><br><span class="line">map&lt;string, <span class="keyword">int</span>&gt; foods;      <span class="comment">//玩家所拥有的食物</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">player</span>(<span class="keyword">int</span> s = <span class="number">100</span>, <span class="keyword">int</span> m = <span class="number">100</span>, <span class="keyword">int</span> t = <span class="number">7</span>, map&lt;string, <span class="keyword">int</span>&gt; food = &#123;&#125;) :<span class="built_in">strength</span>(s), <span class="built_in">money</span>(m), <span class="built_in">time</span>(t) &#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getTime</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> time; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getStrength</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> strength; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> money; &#125;;</span><br><span class="line"><span class="function">map&lt;string, <span class="keyword">int</span>&gt; <span class="title">getFoods</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> foods; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;                 <span class="comment">//显示玩家状态的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">teach</span><span class="params">()</span></span>;                 <span class="comment">//家教的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kfc</span><span class="params">()</span></span>;                   <span class="comment">//麦当劳打工的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cutGrass</span><span class="params">()</span></span>;              <span class="comment">//除草的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">buyFood</span><span class="params">()</span></span>;               <span class="comment">//购买食物的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">feed</span><span class="params">()</span></span>;                  <span class="comment">//喂养宠物的函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">relax</span><span class="params">()</span></span>;                <span class="comment">//休息的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">playWithPet</span><span class="params">()</span></span>;           <span class="comment">//和宠物玩耍的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cleanPet</span><span class="params">()</span></span>;              <span class="comment">//给宠物清洁的函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;                <span class="comment">//睡眠的函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">()</span></span>;               <span class="comment">//状态调整的函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foodGet</span><span class="params">(<span class="keyword">const</span> map&lt;string, <span class="keyword">int</span>&gt; f)</span></span>;<span class="comment">//取出食物用于存档的接口函数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">player::foodGet</span><span class="params">(<span class="keyword">const</span> map&lt;string, <span class="keyword">int</span>&gt; f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">foods = f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">player::change</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (strength &gt;= <span class="number">100</span>) strength = <span class="number">100</span>;<span class="comment">//当状态值超出上限或下限，调整为上限或下限值。</span></span><br><span class="line"><span class="keyword">if</span> (strength &lt;= <span class="number">0</span>) strength = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">player::show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;玩家的属性值：&quot;</span>&lt;&lt; <span class="string">&quot;strength:&quot;</span> &lt;&lt; strength &lt;&lt; <span class="string">&quot;  money:&quot;</span> &lt;&lt; money &lt;&lt; <span class="string">&quot;  time&quot;</span> &lt;&lt; time &lt;&lt; endl&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">player::teach</span><span class="params">()</span>    <span class="comment">//若返回1则条件满足，成功执行操作，下同</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (time &gt;= <span class="number">2</span>)     <span class="comment">//判断时间是否足够，下同</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strength &gt;= <span class="number">30</span>)    <span class="comment">//判断体力是否足够，下同</span></span><br><span class="line">&#123;</span><br><span class="line">time -= <span class="number">2</span>;</span><br><span class="line">money += <span class="number">50</span>;</span><br><span class="line">strength -= <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;体力不足&quot;</span> &lt;&lt; endl;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;今天时间不够了&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">player::kfc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">if</span> (time &gt;= <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strength &gt;= <span class="number">70</span>)</span><br><span class="line">&#123;</span><br><span class="line">time -= <span class="number">4</span>;</span><br><span class="line">money += <span class="number">120</span>;</span><br><span class="line">strength -= <span class="number">70</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;体力不足&quot;</span> &lt;&lt; endl;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;今天时间不够了&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">player::cutGrass</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (time &gt;= <span class="number">1</span>)          </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strength &gt;= <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">time--;</span><br><span class="line">money += <span class="number">20</span>;</span><br><span class="line">strength -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;体力不足&quot;</span> &lt;&lt; endl;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;今天时间不够了&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">player::buyFood</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (strength &gt;= <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">time--;</span><br><span class="line">strength -= <span class="number">20</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);                   <span class="comment">//进行清屏，下同</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;哈喽~  &quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;欢迎光临小店！&quot;</span> &lt;&lt; endl&lt;&lt;endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;以下是食物清单~&quot;</span> &lt;&lt; endl&lt;&lt;endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;1号食物《粗糙的粮食》所需金钱：30  增加的体力：30  增加愉悦度：10 减少清洁度：15&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;2号食物《精品粮食》所需金钱 60  增加的体力：50  增加愉悦度：40  减少清洁度：5&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;3号食物《香肠》所需金钱 20  增加的体力：20  增加愉悦度：30  减少清洁度：20&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;4号食物《辣条》所需金钱 10  增加的体力：20  增加愉悦度：5  减少清洁度：30&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;5号食物《老八秘制小汉堡》所需金钱 28  增加的体力：66  增加愉悦度：-30  减少清洁度：6&lt;&lt;6&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;**请输入所要购买食物的序号**&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec;</span><br><span class="line">cin &gt;&gt; sec;     <span class="comment">//选择食物</span></span><br><span class="line">money -= petfood[sec - <span class="number">1</span>].<span class="built_in">getPayMoney</span>();          <span class="comment">//根据购买的食物减少金钱</span></span><br><span class="line">foods[petfood[sec - <span class="number">1</span>].<span class="built_in">getName</span>()]++;              <span class="comment">//把购买的食物存入</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;体力不足&quot;</span> &lt;&lt; endl;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">player::feed</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">time--;</span><br><span class="line">strength -= <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;有如下食物&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (map&lt;string, <span class="keyword">int</span>&gt;::iterator i = foods.<span class="built_in">begin</span>(); i != foods.<span class="built_in">end</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i-&gt;second &gt;= <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i-&gt;first &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; i-&gt;second &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;你没有食物！&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入任意键按回车返回：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选择喂食食物：(《-请看清你有哪些食物，再进行喂食！)&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;1号食物《粗糙的粮食》增加的体力：30  增加愉悦度：10 减少清洁度：15&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;2号食物《精品粮食》增加的体力：50  增加愉悦度：40  减少清洁度：5&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;3号食物《香肠》增加的体力：20  增加愉悦度：30  减少清洁度：20&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;4号食物《辣条》增加的体力：20  增加愉悦度：5  减少清洁度：30&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;5号食物《老八秘制小汉堡》增加的体力：66  增加愉悦度：-30  减少清洁度：66&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec;</span><br><span class="line">cin &gt;&gt; sec;</span><br><span class="line">foods[petfood[sec - <span class="number">1</span>].<span class="built_in">getName</span>()]--;</span><br><span class="line"><span class="keyword">return</span> sec - <span class="number">1</span>;              <span class="comment">//返回喂食的食物序号给宠物</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">player::relax</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">time--;</span><br><span class="line">strength += <span class="number">50</span>;</span><br><span class="line"><span class="keyword">if</span> (strength &gt; <span class="number">100</span>) strength = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">player::playWithPet</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (strength &gt;= <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">time--;</span><br><span class="line">strength += <span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;体力不足&quot;</span> &lt;&lt; endl;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">player::cleanPet</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (strength &gt;= <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">time--;</span><br><span class="line">strength -= <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;体力不足&quot;</span> &lt;&lt; endl;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">player::sleep</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">time = <span class="number">7</span>;</span><br><span class="line">strength = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pet</span>                   //该类为抽象类，用作<span class="title">cat</span>类和<span class="title">dog</span>类的基类</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string sex;             <span class="comment">//宠物的性别</span></span><br><span class="line"><span class="keyword">int</span> satiety;            <span class="comment">//宠物的饥饿度</span></span><br><span class="line"><span class="keyword">int</span> happiness;          <span class="comment">//宠物的愉悦度</span></span><br><span class="line"><span class="keyword">int</span> cleanliness;        <span class="comment">//宠物的清洁度   </span></span><br><span class="line"><span class="keyword">int</span> weight;             <span class="comment">//宠物的体重</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">pet</span>(string s = <span class="string">&quot;无&quot;</span>, <span class="keyword">int</span> sa = <span class="number">0</span>, <span class="keyword">int</span> ha = <span class="number">0</span>, <span class="keyword">int</span> cl = <span class="number">0</span>, <span class="keyword">int</span> we = <span class="number">0</span>) :</span><br><span class="line"><span class="built_in">sex</span>(s), <span class="built_in">satiety</span>(sa), <span class="built_in">happiness</span>(ha), <span class="built_in">cleanliness</span>(cl), <span class="built_in">weight</span>(we) &#123;&#125;;</span><br><span class="line"><span class="function">string <span class="title">getSex</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> sex; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSatiety</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> satiety; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getHappiness</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> happiness; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getCleanliness</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> cleanliness; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getWeight</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> weight; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">()</span></span>=<span class="number">0</span>;           <span class="comment">//宠物根据自身属性，一个时间段的属性变化函数（为纯虚函数，下同）</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>=<span class="number">0</span>;             <span class="comment">//宠物的显示属性函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>=<span class="number">0</span>;             <span class="comment">//宠物的玩耍函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>= <span class="number">0</span>;          <span class="comment">//宠物的嚎叫函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">(<span class="keyword">int</span> sec)</span></span>;                 <span class="comment">//宠物的进食函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">cleanByBoss</span><span class="params">()</span> </span>= <span class="number">0</span>;    <span class="comment">//宠物被主人清洁函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">unInterract</span><span class="params">()</span> </span>= <span class="number">0</span>;    <span class="comment">//宠物非交互事件段状态改变函数</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span> <span class="title">death</span><span class="params">()</span> </span>= <span class="number">0</span>;           <span class="comment">//宠物的死亡函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">balance</span><span class="params">()</span></span>;                    <span class="comment">//宠物根据上限与下限的调整函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dayEnd</span><span class="params">()</span></span>;                     <span class="comment">//宠物进入新的一天的状态改变函数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pet::balance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (happiness &gt;= <span class="number">100</span>) happiness = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (happiness &lt;= <span class="number">0</span>) happiness = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (satiety &gt;= <span class="number">100</span>) satiety = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (satiety &lt;= <span class="number">0</span>) satiety = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (cleanliness &gt;= <span class="number">100</span>) cleanliness = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (cleanliness &lt;= <span class="number">0</span>) cleanliness = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pet::eat</span><span class="params">(<span class="keyword">int</span> sec)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(sec!=<span class="number">-1</span>)           <span class="comment">//sec为-1是主人条件不满足的情况，不能进行喂食</span></span><br><span class="line">&#123;</span><br><span class="line">satiety += petfood[sec].<span class="built_in">getAddStrength</span>();</span><br><span class="line">cleanliness -= petfood[sec].<span class="built_in">getReduceCleanliness</span>();</span><br><span class="line">happiness += petfood[sec].<span class="built_in">getAddHappiness</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pet::dayEnd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">happiness += <span class="number">30</span>;</span><br><span class="line">cleanliness -= <span class="number">5</span>;</span><br><span class="line">satiety -= <span class="number">60</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cat</span> :</span><span class="keyword">public</span> pet</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">cat</span>(string s = <span class="string">&quot;无&quot;</span>, <span class="keyword">int</span> sa = <span class="number">0</span>, <span class="keyword">int</span> ha = <span class="number">0</span>, <span class="keyword">int</span> cl = <span class="number">0</span>, <span class="keyword">int</span> we = <span class="number">0</span>) :<span class="built_in">pet</span>(s, sa, ha, cl, we) &#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;        <span class="comment">//对纯虚函数进行重载，下同</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">cleanByBoss</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">unInterract</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span> <span class="title">death</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cleanMyself</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">catchMouse</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*string sex;</span></span><br><span class="line"><span class="comment">int satiety;</span></span><br><span class="line"><span class="comment">int happiness;</span></span><br><span class="line"><span class="comment">int cleanliness;</span></span><br><span class="line"><span class="comment">int weight;*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cat::show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;你可爱的小&quot;</span> &lt;&lt; <span class="built_in">getSex</span>() &lt;&lt; <span class="string">&quot;猫&quot;</span> &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; <span class="string">&quot;属性值如下：&quot;</span></span><br><span class="line">&lt;&lt; <span class="string">&quot; 饱食度：&quot;</span> &lt;&lt; <span class="built_in">getSatiety</span>() &lt;&lt; <span class="string">&quot; 愉悦度：&quot;</span> &lt;&lt; <span class="built_in">getHappiness</span>()</span><br><span class="line">&lt;&lt; <span class="string">&quot; 清洁度：&quot;</span> &lt;&lt; <span class="built_in">getCleanliness</span>() &lt;&lt; <span class="string">&quot; 体重：&quot;</span> &lt;&lt; <span class="built_in">getWeight</span>() &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cat::play</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (happiness &gt;= <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">satiety -= <span class="number">20</span>;</span><br><span class="line">happiness += <span class="number">30</span>;</span><br><span class="line">cleanliness -= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;愉悦度不够，猫主子不想洗&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cat::shout</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;喵喵~~  喵~ 喵~ 喵~ &quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cat::cleanMyself</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">srand</span>((<span class="keyword">int</span>)<span class="built_in">time</span>(<span class="number">0</span>));                 <span class="comment">//对猫有概率自洁的判断</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">random</span>(<span class="number">10</span>)&lt;=<span class="number">2</span>)cleanliness += <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cat::cleanByBoss</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (happiness &gt;= <span class="number">90</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cleanliness &gt;= <span class="number">80</span>) happiness -= <span class="number">50</span>;</span><br><span class="line">cleanliness = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;愉悦度不够，猫懒得理你&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cat::catchMouse</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">srand</span>((<span class="keyword">int</span>)<span class="built_in">time</span>(<span class="number">0</span>));           </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">random</span>(<span class="number">10</span>) &lt;= <span class="number">1</span>)        <span class="comment">//对猫有概率捉鼠的判断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (satiety &lt; <span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line">satiety += <span class="number">40</span>;</span><br><span class="line">cleanliness -= <span class="number">30</span>;</span><br><span class="line">happiness += <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">satiety -= <span class="number">20</span>;</span><br><span class="line">cleanliness -= <span class="number">10</span>;</span><br><span class="line">happiness += <span class="number">40</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cat::unInterract</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">satiety -= <span class="number">20</span>;</span><br><span class="line">cleanliness -= <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">die</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;对于死亡这个话题我们一直是缺席的，从小我们只学到了要热爱生命、珍惜生命，却从来没有人教过我们如何面对死亡......&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line"></span><br><span class="line">&lt;&lt; <span class="string">&quot;而我们每一个养宠人都会更加刻意逃避这一天的到来......&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line"></span><br><span class="line">&lt;&lt; <span class="string">&quot;”到饭点，倒完粮才意识到它已经不在了……“&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line"></span><br><span class="line">&lt;&lt; <span class="string">&quot;”需要等 5 分钟才敢进家门。我得告诉自己，不会再有人迎接你了……“&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line"></span><br><span class="line">&lt;&lt; <span class="string">&quot;”床终于变得宽敞了，似乎也变凉了......&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line"></span><br><span class="line">&lt;&lt; <span class="string">&quot;“由于你的喂食不当你的宠物饿死了...&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cat::death</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;        <span class="comment">//死亡返回flag=0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (happiness == <span class="number">0</span>)  <span class="comment">//愉悦度为0，宠物会永远离开你</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;由于你的疏于照顾，小猫一点也不高兴，永远的离开了你&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sex == <span class="string">&quot;公&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (weight &lt; <span class="number">4</span> || weight&gt;<span class="number">16</span>)   <span class="comment">//公猫死亡时的条件</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">die</span>();</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (weight &lt; <span class="number">2</span> || weight&gt;<span class="number">10</span>)   <span class="comment">//母猫死亡时的条件</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">die</span>();</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cat::change</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (satiety == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness -= <span class="number">10</span>;</span><br><span class="line">weight -= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (satiety == <span class="number">100</span>) weight += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sex == <span class="string">&quot;公&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (weight &lt; <span class="number">8</span> || weight&gt;<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness -= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (weight &lt; <span class="number">4</span> || weight&gt;<span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness -= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (cleanliness == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness -= <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(cleanliness&gt;<span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness += <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (happiness &gt;= <span class="number">100</span>) happiness = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (happiness &lt;= <span class="number">0</span>) happiness = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (satiety &gt;= <span class="number">100</span>) satiety = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (satiety &lt;= <span class="number">0</span>) satiety = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (cleanliness &gt;= <span class="number">100</span>) cleanliness = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (cleanliness &lt;= <span class="number">0</span>) cleanliness = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dog</span> :</span><span class="keyword">public</span> pet</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">dog</span>(string s = <span class="string">&quot;无&quot;</span>, <span class="keyword">int</span> sa = <span class="number">0</span>, <span class="keyword">int</span> ha = <span class="number">0</span>, <span class="keyword">int</span> cl = <span class="number">0</span>, <span class="keyword">int</span> we = <span class="number">0</span>) :<span class="built_in">pet</span>(s, sa, ha, cl, we) &#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">cleanByBoss</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">unInterract</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span> <span class="title">death</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dog::show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;你可爱的小&quot;</span> &lt;&lt; <span class="built_in">getSex</span>() &lt;&lt; <span class="string">&quot;狗&quot;</span> &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; <span class="string">&quot;属性值如下：&quot;</span></span><br><span class="line">&lt;&lt; <span class="string">&quot; 饱食度：&quot;</span> &lt;&lt; <span class="built_in">getSatiety</span>() &lt;&lt; <span class="string">&quot; 愉悦度：&quot;</span> &lt;&lt; <span class="built_in">getHappiness</span>()</span><br><span class="line">&lt;&lt; <span class="string">&quot; 清洁度：&quot;</span> &lt;&lt; <span class="built_in">getCleanliness</span>() &lt;&lt; <span class="string">&quot; 体重：&quot;</span> &lt;&lt; <span class="built_in">getWeight</span>() &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dog::play</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (happiness &gt;= <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">satiety -= <span class="number">40</span>;</span><br><span class="line">happiness += <span class="number">70</span>;</span><br><span class="line">cleanliness -= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;愉悦度达不到要求，狗子懒得理你&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dog::shout</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;汪汪汪~~  汪汪~  汪汪~ &quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dog::cleanByBoss</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (happiness &gt;= <span class="number">70</span>)</span><br><span class="line">&#123;</span><br><span class="line">cleanliness = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;愉悦度不够，狗子懒得洗&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dog::unInterract</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">satiety -= <span class="number">20</span>;</span><br><span class="line">happiness -= <span class="number">20</span>;</span><br><span class="line">cleanliness -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dog::change</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (satiety == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness -= <span class="number">10</span>;</span><br><span class="line">weight -= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (satiety == <span class="number">100</span>) weight += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (cleanliness == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness -= <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (cleanliness &gt; <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness += <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (weight &lt; <span class="number">30</span> || weight&gt;<span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">happiness -= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (happiness &gt;= <span class="number">100</span>) happiness = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (happiness &lt;= <span class="number">0</span>) happiness = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (satiety &gt;= <span class="number">100</span>) satiety = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (satiety &lt;= <span class="number">0</span>) satiety = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (cleanliness &gt;= <span class="number">100</span>) cleanliness = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (cleanliness &lt;= <span class="number">0</span>) cleanliness = <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dog::death</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (happiness == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;由于你的疏于照顾，狗子一点也不高兴，永远的离开了你&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (weight &lt; <span class="number">15</span> || weight&gt;<span class="number">75</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">die</span>();</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">info</span><span class="params">(<span class="keyword">int</span> sec)</span>         <span class="comment">//界面显示函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!sec) cout &lt;&lt; <span class="string">&quot;猫猫去捉鼠了，不能和它互动了哦！&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选择你的行动&quot;</span>&lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;1.家教，消耗2个时间，获取50金钱，消耗30体力&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;2.麦当劳兼职，消耗个4时间，获取120金钱，消耗70体力&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;3.割草，消耗1个时间，获取20金钱，消耗20体力&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;4.购买宠物粮食，玩家消耗1个时间，20体力，根据具体宠物粮食消耗金钱。&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;5.休息，玩家消耗1个时间，恢复50体力。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (sec)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;6.喂食：玩家消耗1个时间，20体力&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;7.和宠物玩耍：玩家消耗1个时间，50体力。(需愉悦度&gt;=30)&quot;</span> &lt;&lt; endl &lt;&lt; endl</span><br><span class="line">&lt;&lt; <span class="string">&quot;8.清洗宠物：玩家消耗1个时间，30体力。(猫猫愉悦度需&gt;=90才可以清洗，狗需&gt;=70)&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;9.宠物系统说明。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;10.退出游戏并存档。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择你的行动序号&quot;</span>&lt;&lt;endl &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">infomation</span><span class="params">()</span>        <span class="comment">//宠物收养指导书</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;饱食度：宠物的饱食度为0时，会降低10点愉悦度，猫会降低1斤体重，狗会降低2斤体重。&quot;</span> &lt;&lt; endl&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;宠物饱食度为100时，猫会提高1斤体重，狗会提高2斤体重。宠物被喂食会根据投喂的食物提高&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一定饱食度。宠物玩耍后会根据玩耍和宠物自身情况降低饱食度。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;愉悦度：愉悦度影响宠物对玩家的态度，愉悦度为0时，宠物会离开主人；愉悦度低于30时，&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;宠物不会和主人玩耍；愉悦度低于70时，宠物狗不会让主人清洗；宠物猫的愉悦度必须90以上，才会让主人清洗。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;体重：体重是衡量宠物的健康，公猫健康体重为8~12斤，初始时公猫为10斤，母猫健康体重为4~8斤，初始时母猫&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;为6斤。公猫体重低于4斤，高于16斤将会因为健康不佳死亡，母猫体重低于2斤，高于10斤将会因为健康死亡。狗健康&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;体重为30~60斤，初始时狗会有45斤体重。低于15斤，高于75斤，狗会因为健康死亡。宠物低于超出健康体重时，每个时&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;间段都会降低10点愉悦度。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;清洁度：清洁度为0时，宠物愉悦度每个时间段降低30，清洁度高于80时，宠物愉悦度每个时间段升高10。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;宠物自动行为：&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;猫的自洁：猫有30% 的可能性进行自洁，消耗1个时间，提高30清洁度；&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;猫的随机抓老鼠：在任何时间段，猫有20% 的可能会去抓老鼠，此时主人是&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;无法对猫进行交互的。消耗1个时间，如果此时猫的饱食度低于50，会吃掉老鼠&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;,提高40饱食度，降低30清洁度，提高5愉悦度。如果此时猫的饱食度大于等于50&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;，猫只会玩耍老鼠，降低20饱食度，降低10清洁度，提高40愉悦度。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非主人交互时间：该时间段一般为主人买东西、打工或休息等无暇顾及宠物的时间段，&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;该时间段内宠物将降低20饱食度，另外，狗降低20点愉悦度，和20点清洁度。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;猫不会降低愉悦度，但是会降低5清洁度。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;每天结束时，宠物会强制进入休息，提高30愉悦度，降低5清洁度，降低60饱食度。&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">interactCat</span><span class="params">(cat&amp; pe, player&amp; pl,<span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = pe.<span class="built_in">catchMouse</span>();        <span class="comment">//判断猫是否已去捉鼠</span></span><br><span class="line"><span class="built_in">info</span>(flag);</span><br><span class="line"><span class="keyword">int</span> sec;</span><br><span class="line">cin &gt;&gt; sec;</span><br><span class="line"><span class="keyword">if</span> (flag)       </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (sec)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">teach</span>())            <span class="comment">//若满足家教的体力和时间条件，下同</span></span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();           <span class="comment">//每过一个时间段宠物状态会变化，家教耗费两个时间段，change两次，下同</span></span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();     <span class="comment">//若猫已去捉鼠则不能自洁，下同</span></span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">kfc</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">cutGrass</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">cutGrass</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pl.<span class="built_in">buyFood</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">pe.<span class="built_in">shout</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">eat</span>(pl.<span class="built_in">feed</span>());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">pl.<span class="built_in">relax</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">playWithPet</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">play</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">cleanPet</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">cleanByBoss</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">infomation</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">datas da;                            <span class="comment">//存档的数据读出</span></span><br><span class="line">da.cleanliness = pe.<span class="built_in">getCleanliness</span>();</span><br><span class="line">da.day = day;</span><br><span class="line">da.foods = pl.<span class="built_in">getFoods</span>();</span><br><span class="line">da.happiness = pe.<span class="built_in">getHappiness</span>();</span><br><span class="line">da.money = pl.<span class="built_in">getMoney</span>();</span><br><span class="line">da.satiety = pe.<span class="built_in">getSatiety</span>();</span><br><span class="line">da.sex = pe.<span class="built_in">getSex</span>();</span><br><span class="line">da.sort = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line">da.strength = pl.<span class="built_in">getStrength</span>();</span><br><span class="line">da.time = pl.<span class="built_in">getTime</span>();</span><br><span class="line">da.weight = pe.<span class="built_in">getWeight</span>();</span><br><span class="line"><span class="built_in">putData</span>(<span class="string">&quot;data&quot;</span>, da);                  <span class="comment">//存档读入文件</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);                              <span class="comment">//离开游戏</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (sec)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">teach</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">kfc</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line"><span class="keyword">if</span> (pe.<span class="built_in">catchMouse</span>())  pe.<span class="built_in">cleanMyself</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">cutGrass</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">buyFood</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">pl.<span class="built_in">relax</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">infomation</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">datas da;</span><br><span class="line">da.cleanliness = pe.<span class="built_in">getCleanliness</span>();</span><br><span class="line">da.day = day;</span><br><span class="line">da.foods = pl.<span class="built_in">getFoods</span>();</span><br><span class="line">da.happiness = pe.<span class="built_in">getHappiness</span>();</span><br><span class="line">da.money = pl.<span class="built_in">getMoney</span>();</span><br><span class="line">da.satiety = pe.<span class="built_in">getSatiety</span>();</span><br><span class="line">da.sex = pe.<span class="built_in">getSex</span>();</span><br><span class="line">da.sort = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line">da.strength = pl.<span class="built_in">getStrength</span>();</span><br><span class="line">da.time = pl.<span class="built_in">getTime</span>();</span><br><span class="line">da.weight = pe.<span class="built_in">getWeight</span>();</span><br><span class="line"><span class="built_in">putData</span>(<span class="string">&quot;data&quot;</span>, da);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">interactdog</span><span class="params">(dog&amp; pe, player&amp; pl,<span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">info</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> sec;</span><br><span class="line">cin &gt;&gt; sec;</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (sec)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">teach</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">kfc</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">cutGrass</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">buyFood</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">pe.<span class="built_in">shout</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">eat</span>(pl.<span class="built_in">feed</span>());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">pl.<span class="built_in">relax</span>();</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">unInterract</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">playWithPet</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">play</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">if</span> (pl.<span class="built_in">cleanPet</span>())</span><br><span class="line">&#123;</span><br><span class="line">pe.<span class="built_in">change</span>();</span><br><span class="line">pe.<span class="built_in">cleanByBoss</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">infomation</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">datas da;</span><br><span class="line">da.cleanliness = pe.<span class="built_in">getCleanliness</span>();</span><br><span class="line">da.day = day;</span><br><span class="line">da.foods = pl.<span class="built_in">getFoods</span>();</span><br><span class="line">da.happiness = pe.<span class="built_in">getHappiness</span>();</span><br><span class="line">da.money = pl.<span class="built_in">getMoney</span>();</span><br><span class="line">da.satiety = pe.<span class="built_in">getSatiety</span>();</span><br><span class="line">da.sex = pe.<span class="built_in">getSex</span>();</span><br><span class="line">da.sort = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line">da.strength = pl.<span class="built_in">getStrength</span>();</span><br><span class="line">da.time = pl.<span class="built_in">getTime</span>();</span><br><span class="line">da.weight = pe.<span class="built_in">getWeight</span>();</span><br><span class="line"><span class="built_in">putData</span>(<span class="string">&quot;data&quot;</span>, da);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adopt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择你想养的宠物 (1)猫 or (2)狗&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec;</span><br><span class="line">cin &gt;&gt; sec;</span><br><span class="line">player me;</span><br><span class="line">string sex;</span><br><span class="line"><span class="keyword">int</span> secp;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">80</span>, b=<span class="number">80</span>, c=<span class="number">80</span>, d;          <span class="comment">//给宠物初始的属性值</span></span><br><span class="line"><span class="keyword">if</span> (sec == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请好好对待这只小猫哦~&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;你是想养只公猫猫还是只母猫猫&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;(1) 公猫猫  (2) 母猫猫 &quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec2;</span><br><span class="line">cin &gt;&gt; sec2;</span><br><span class="line"><span class="keyword">if</span> (sec2 == <span class="number">1</span>)                <span class="comment">//根据性别初始属性值</span></span><br><span class="line">&#123;</span><br><span class="line">sex = <span class="string">&quot;公&quot;</span>;</span><br><span class="line">d = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sex = <span class="string">&quot;母&quot;</span>;</span><br><span class="line">d = <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;你是想养只公狗子还是只母狗子&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;(1) 公狗子  (2) 母狗子 &quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec2;</span><br><span class="line">cin &gt;&gt; sec2;</span><br><span class="line"><span class="keyword">if</span> (sec2 == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sex = <span class="string">&quot;公&quot;</span>;</span><br><span class="line">d = <span class="number">45</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sex = <span class="string">&quot;母&quot;</span>;</span><br><span class="line">d = <span class="number">45</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请好好对待这只小狗哦~&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">secp = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">cat <span class="title">pecat</span><span class="params">(sex, a, b, c, d)</span></span>;</span><br><span class="line"><span class="function">dog <span class="title">pedog</span><span class="params">(sex, a, b, c, d)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> day = <span class="number">0</span>;</span><br><span class="line">string temp;</span><br><span class="line"><span class="keyword">while</span> (day != <span class="number">30</span>)      <span class="comment">//当玩完30天游戏圆满结束</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (sec==<span class="number">1</span>)        <span class="comment">//猫狗的判断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> life = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清屏</span></span><br><span class="line"><span class="keyword">while</span> (me.<span class="built_in">getTime</span>()&gt;<span class="number">0</span>)     <span class="comment">//当今天时间为0时进入下一天</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;今天是与萌宠相伴的第&quot;</span> &lt;&lt; day + <span class="number">1</span> &lt;&lt; <span class="string">&quot;天&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">pecat.<span class="built_in">balance</span>();       <span class="comment">//活动开始前把溢出的属性值调为上下限</span></span><br><span class="line">me.<span class="built_in">change</span>();</span><br><span class="line">me.<span class="built_in">show</span>();             <span class="comment">//每一次活动前，显示当前任务和宠物的属性</span></span><br><span class="line">pecat.<span class="built_in">show</span>();</span><br><span class="line"><span class="built_in">interactCat</span>(pecat, me,day);</span><br><span class="line"><span class="keyword">if</span> (!pecat.<span class="built_in">death</span>())     <span class="comment">//死亡时退出循环游戏结束</span></span><br><span class="line">&#123;</span><br><span class="line">life = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;任意输入按回车进入下一时间段&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!life) <span class="keyword">break</span>;</span><br><span class="line">day++;                       </span><br><span class="line">me.<span class="built_in">sleep</span>();                 <span class="comment">//每过一天会睡眠一次</span></span><br><span class="line">pecat.<span class="built_in">dayEnd</span>();             <span class="comment">//宠物每过一天的状态改变</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> life = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; day + <span class="number">1</span> &lt;&lt; <span class="string">&quot;天开始了&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (me.<span class="built_in">getTime</span>() &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;今天是与萌宠相伴的第&quot;</span> &lt;&lt; day + <span class="number">1</span> &lt;&lt; <span class="string">&quot;天&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">pedog.<span class="built_in">balance</span>();</span><br><span class="line">me.<span class="built_in">change</span>();</span><br><span class="line">me.<span class="built_in">show</span>();</span><br><span class="line">pedog.<span class="built_in">show</span>();</span><br><span class="line"><span class="built_in">interactdog</span>(pedog, me,day);</span><br><span class="line"><span class="keyword">if</span> (!pedog.<span class="built_in">death</span>())</span><br><span class="line">&#123;</span><br><span class="line">life = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;任意输入按回车进入下一时间段&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!life) <span class="keyword">break</span>;</span><br><span class="line">day++;</span><br><span class="line">me.<span class="built_in">sleep</span>();</span><br><span class="line">pedog.<span class="built_in">dayEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (day == <span class="number">30</span>) cout &lt;&lt; <span class="string">&quot;完结撒花，宠物寿终正寝！&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">continueAdopt</span><span class="params">(datas da)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">player <span class="title">me</span><span class="params">(da.strength, da.money, da.time)</span></span>;</span><br><span class="line">me.<span class="built_in">foodGet</span>(da.foods);</span><br><span class="line"><span class="keyword">if</span> (da.sort == <span class="string">&quot;cat&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">cat <span class="title">pecat</span><span class="params">(da.sex, da.satiety, da.happiness, da.cleanliness, da.weight)</span></span>;</span><br><span class="line"><span class="keyword">int</span> day = da.day;</span><br><span class="line">string temp;</span><br><span class="line"><span class="keyword">while</span> (day != <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in"><span class="keyword">typeid</span></span>(cat) == <span class="built_in"><span class="keyword">typeid</span></span>(pecat))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> life = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (me.<span class="built_in">getTime</span>() &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;今天是与萌宠相伴的第&quot;</span> &lt;&lt; day + <span class="number">1</span> &lt;&lt; <span class="string">&quot;天&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">pecat.<span class="built_in">balance</span>();</span><br><span class="line">me.<span class="built_in">change</span>();</span><br><span class="line">me.<span class="built_in">show</span>();</span><br><span class="line">pecat.<span class="built_in">show</span>();</span><br><span class="line"><span class="built_in">interactCat</span>(pecat, me,day);</span><br><span class="line"><span class="keyword">if</span> (!pecat.<span class="built_in">death</span>())</span><br><span class="line">&#123;</span><br><span class="line">life = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;任意输入按回车进入下一时间段&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!life) <span class="keyword">break</span>;</span><br><span class="line">day++;</span><br><span class="line">me.<span class="built_in">sleep</span>();</span><br><span class="line">pecat.<span class="built_in">dayEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (day == <span class="number">30</span>) cout &lt;&lt; <span class="string">&quot;完结撒花，宠物寿终正寝！&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (da.sort == <span class="string">&quot;dog&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">dog <span class="title">pedog</span><span class="params">(da.sex, da.satiety, da.happiness, da.cleanliness, da.weight)</span></span>;</span><br><span class="line"><span class="keyword">int</span> day = da.day;</span><br><span class="line">string temp;</span><br><span class="line"><span class="keyword">while</span> (day != <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in"><span class="keyword">typeid</span></span>(dog) == <span class="built_in"><span class="keyword">typeid</span></span>(pedog))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> life = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (me.<span class="built_in">getTime</span>() &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;今天是与萌宠相伴的第&quot;</span> &lt;&lt; day + <span class="number">1</span> &lt;&lt; <span class="string">&quot;天&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">pedog.<span class="built_in">balance</span>();</span><br><span class="line">me.<span class="built_in">change</span>();</span><br><span class="line">me.<span class="built_in">show</span>();</span><br><span class="line">pedog.<span class="built_in">show</span>();</span><br><span class="line"><span class="built_in">interactdog</span>(pedog, me,day);</span><br><span class="line"><span class="keyword">if</span> (!pedog.<span class="built_in">death</span>())</span><br><span class="line">&#123;</span><br><span class="line">life = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;任意输入按回车进入下一时间段&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!life) <span class="keyword">break</span>;</span><br><span class="line">day++;</span><br><span class="line">me.<span class="built_in">sleep</span>();</span><br><span class="line">pedog.<span class="built_in">dayEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (day == <span class="number">30</span>) cout &lt;&lt; <span class="string">&quot;完结撒花，宠物寿终正寝！&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getData</span><span class="params">(<span class="keyword">const</span> string&amp; filename, datas&amp; data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">ifstream <span class="title">fin</span><span class="params">(filename)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (fin.<span class="built_in">good</span>())</span><br><span class="line">&#123;</span><br><span class="line">fin&gt;&gt;data.day&gt;&gt;data.sort&gt;&gt;data.strength&gt;&gt;data.money&gt;&gt;data.time&gt;&gt;</span><br><span class="line">data.sex&gt;&gt;data.satiety&gt;&gt;data.happiness&gt;&gt;data.cleanliness&gt;&gt;data.weight;</span><br><span class="line">string str; <span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">while</span> (fin &gt;&gt; str &gt;&gt; num)     <span class="comment">//食物的读入</span></span><br><span class="line">&#123;</span><br><span class="line">data.foods[str] = num;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fin.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putData</span><span class="params">(<span class="keyword">const</span> string&amp; filename,datas data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">ofstream <span class="title">fout</span><span class="params">(filename)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (fout.<span class="built_in">good</span>())</span><br><span class="line">&#123;</span><br><span class="line">fout&lt;&lt;data.day&lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt;data.sort&lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt;  data.strength &lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt; data.money &lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt; data.time &lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt;</span><br><span class="line">data.sex &lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt; data.satiety &lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt; data.happiness &lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt; data.cleanliness &lt;&lt;<span class="string">&quot;&quot;</span>&lt;&lt; data.weight;</span><br><span class="line">string str; <span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">for</span>(map&lt;string,<span class="keyword">int</span>&gt;::iterator i=data.foods.<span class="built_in">begin</span>();i!=data.foods.<span class="built_in">end</span>();i++)   <span class="comment">//食物的存入</span></span><br><span class="line">&#123;</span><br><span class="line">fout &lt;&lt; i-&gt;first;</span><br><span class="line">fout &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; i-&gt;second;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fout.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;欢迎来到电子宠物养成系统~&quot;</span> &lt;&lt; endl&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选择（1）开始游戏或（2）读取存档&quot;</span>&lt;&lt;endl&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入选择：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> sec;</span><br><span class="line">cin &gt;&gt; sec;</span><br><span class="line"><span class="keyword">if</span> (sec == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">adopt</span>();        <span class="comment">//开始新的游戏</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">datas da;</span><br><span class="line"><span class="built_in">getData</span>(<span class="string">&quot;data&quot;</span>, da);       <span class="comment">//取出文档数据</span></span><br><span class="line"><span class="built_in">continueAdopt</span>(da);        <span class="comment">//读取存档继续游戏</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;pre&gt;&lt;code&gt;                     电子宠物游戏
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设计一款文字式交互电子宠物游戏，该游戏要求具备如下要素：&lt;/p&gt;
&lt;p&gt;一、玩家（Player），玩家具备如下要素：&lt;br&gt;体力：体力是玩家行动的关键要素，玩家最高拥有100点体力值，每种不同行动都会消耗体力，一旦体力归0，玩家只能选择休息恢复体力。&lt;/p&gt;
&lt;p&gt;金钱：金钱是购买宠物道具的要素，金钱可以通过打工获取。&lt;/p&gt;
&lt;p&gt;行动：玩家可以在一个时间点选择一个行动，每种行动均会获取一定内容并且消耗当前时间：&lt;/p&gt;</summary>
    
    
    
    
    <category term="c++" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>飞翔小鸟游戏（java实现）</title>
    <link href="http://example.com/2021/10/14/java400%E8%A1%8C%E8%83%BD%E5%B9%B2%E5%95%A5%EF%BC%9F%E4%B8%8D%E5%A6%82%E5%86%99%E4%B8%AA%E9%A3%9E%E7%BF%94%E5%B0%8F%E9%B8%9F%E6%B8%B8%E6%88%8F%E5%90%A7/"/>
    <id>http://example.com/2021/10/14/java400%E8%A1%8C%E8%83%BD%E5%B9%B2%E5%95%A5%EF%BC%9F%E4%B8%8D%E5%A6%82%E5%86%99%E4%B8%AA%E9%A3%9E%E7%BF%94%E5%B0%8F%E9%B8%9F%E6%B8%B8%E6%88%8F%E5%90%A7/</id>
    <published>2021-10-14T14:47:29.891Z</published>
    <updated>2021-10-15T06:57:10.640Z</updated>
    
    <content type="html"><![CDATA[<p><strong>声明：该项目是牛客网的一个开源项目</strong></p><p>@<a href="%E9%A3%9E%E7%BF%94%E5%B0%8F%E9%B8%9F%E6%B8%B8%E6%88%8F">TOC</a></p><h1 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h1><h1 id="一-效果图"><a href="#一-效果图" class="headerlink" title="一  效果图"></a>一  效果图</h1><p><img src="https://img-blog.csdnimg.cn/20210613224610839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><span id="more"></span>![在这里插入图片描述](https://img-blog.csdnimg.cn/20210613224637471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70)<h1 id="二-思维导图"><a href="#二-思维导图" class="headerlink" title="二 思维导图"></a>二 思维导图</h1><h2 id="1-类的属性关系"><a href="#1-类的属性关系" class="headerlink" title="1.类的属性关系"></a>1.类的属性关系</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">graph LR</span><br><span class="line">A&#123;飞翔小鸟游戏类&#125;  --&gt; B(小鸟类)</span><br><span class="line">A--&gt;a1(游戏分数)</span><br><span class="line">A--&gt;a2(开始结束背景图)</span><br><span class="line">A--&gt;a3(游戏运行状态)</span><br><span class="line">B--&gt;C((位置坐标))</span><br><span class="line">B--&gt;D((图像长宽))</span><br><span class="line">B--&gt;E((速度))</span><br><span class="line">B--&gt;F((位移倾角))</span><br><span class="line">B--&gt;G((小鸟图形))</span><br><span class="line">A--&gt;H(地面类)</span><br><span class="line">H--&gt;h1((位置坐标))</span><br><span class="line">H--&gt;h2((图像长宽))</span><br><span class="line">H--&gt;h3((地面图像))</span><br><span class="line">A--&gt;O(柱子类)</span><br><span class="line">O--&gt;o1((位置坐标))</span><br><span class="line">O--&gt;o2((图像长宽))</span><br><span class="line">O--&gt;o3((柱子图像))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-类的相关方法"><a href="#2-类的相关方法" class="headerlink" title="2.类的相关方法"></a>2.类的相关方法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A&#123;game&#125; --&gt; B(Bird)</span><br><span class="line">A--&gt;C(BirdGame)</span><br><span class="line">C--&gt;c1((BirdGame-构造器))</span><br><span class="line">C--&gt;c2((paint--绘制方法))</span><br><span class="line">C--&gt;c3((action--游戏运行))</span><br><span class="line">C--&gt;c4((main--主函数启动))</span><br><span class="line">B--&gt;b2((Bird--构造器))</span><br><span class="line">B--&gt;b1((fly--飞行动作))</span><br><span class="line">B--&gt;b3((step--移动))</span><br><span class="line">B--&gt;flappy((flappy--飞行重置))</span><br><span class="line">B--&gt;hit((hit--判断是否撞到柱子或地面))</span><br><span class="line">A--&gt;D(Column)</span><br><span class="line">D--&gt;d1((Column--构造器))</span><br><span class="line">D--&gt;d2((step--移动))</span><br><span class="line">A--&gt;E(Ground)</span><br><span class="line">E--&gt;e1((Ground--构造器))</span><br><span class="line">E--&gt;e2((step--移动))</span><br></pre></td></tr></table></figure><h1 id="三-设计步骤"><a href="#三-设计步骤" class="headerlink" title="三  设计步骤"></a>三  设计步骤</h1><h2 id="1-素材准备"><a href="#1-素材准备" class="headerlink" title="1.素材准备"></a>1.素材准备</h2><p>相关项目/素材我放到了github仓库。<br><strong><a href="https://github.com/ORikkaO/BirdGame">github地址https://github.com/ORikkaO/BirdGame</a></strong></p><p>网盘链接<a href="https://pan.baidu.com/s/1QLUI9474auFzVt2YNVVwPw">https://pan.baidu.com/s/1QLUI9474auFzVt2YNVVwPw </a><br>提取码：rikk</p><h2 id="2-预备知识及其运用"><a href="#2-预备知识及其运用" class="headerlink" title="2.预备知识及其运用"></a>2.预备知识及其运用</h2><p>1.面向对象的封装：设计包装出小鸟、地面、柱子、游戏四个类。<br>2.swing和awt包：图形界面工具，绘制出游戏场景。<br>3.Math类：运用atan等方法辅助完成小鸟旋转角度转换。<br>4.事件监听器：运用鼠标监听器完成游戏状态转换及小鸟移动。<br>5.多线程：该项目就用到了一个sleep休眠。</p><p><strong>相关的知识用到的不多，一边做一边学习(熟悉)运用就好。</strong></p><h2 id="3-大体流程"><a href="#3-大体流程" class="headerlink" title="3.大体流程"></a>3.大体流程</h2><p>1.绘制面板，放入背景图。<br>2.设计地面、柱子类完成移动的效果(移动方法实现)。<br>3.设计小鸟，完成飞行轨迹、与柱子是否碰撞的方法等。<br>4.设计游戏类，完成游戏类界面的绘制。<br>5.设计游戏开始的方法与流程。<br>6.增加鼠标监听器完成对小鸟飞行及游戏运行的控制。</p><h1 id="四-源码"><a href="#四-源码" class="headerlink" title="四 源码"></a>四 源码</h1><h2 id="1-游戏类"><a href="#1-游戏类" class="headerlink" title="1.游戏类"></a>1.游戏类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> game;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> javax.imageio.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BirdGame</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Image background;<span class="comment">//背景图片</span></span><br><span class="line">Image startImage;<span class="comment">//开始图片</span></span><br><span class="line">Image overImage;<span class="comment">//游戏结束图片</span></span><br><span class="line">Ground ground;<span class="comment">//地面</span></span><br><span class="line">Column column1,column2;<span class="comment">//两根柱子</span></span><br><span class="line">Bird bird;<span class="comment">//小鸟</span></span><br><span class="line"><span class="keyword">int</span> score;<span class="comment">//游戏分数</span></span><br><span class="line"><span class="keyword">int</span> state;<span class="comment">//游戏状态</span></span><br><span class="line"><span class="comment">//状态常量</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> START=<span class="number">0</span>;<span class="comment">//开始</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> RUNNING=<span class="number">1</span>;<span class="comment">//运行</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> GAME_OVER=<span class="number">2</span>;<span class="comment">//结束</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BirdGame</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//初始背景图片</span></span><br><span class="line"><span class="comment">//background = new ImageIcon(&quot;D:\\java\\elipse\\project_workplace\\Bird\\src\\resources\\bg.png&quot;).getImage();//绝对路径</span></span><br><span class="line"><span class="comment">//background = new ImageIcon(&quot;src\\resources\\bg.png&quot;).getImage();//相对路径，一开始默认位置是Bird项目文件夹</span></span><br><span class="line">background = <span class="keyword">new</span> ImageIcon(<span class="string">&quot;./source/bg.png&quot;</span>).getImage();</span><br><span class="line">startImage = <span class="keyword">new</span> ImageIcon(<span class="string">&quot;./source/start.png&quot;</span>).getImage();</span><br><span class="line">overImage=<span class="keyword">new</span> ImageIcon(<span class="string">&quot;./source/gameover.png&quot;</span>).getImage();</span><br><span class="line"><span class="comment">//初始化地面、柱子、小鸟、分号、状态</span></span><br><span class="line">ground=<span class="keyword">new</span> Ground();</span><br><span class="line">column1=<span class="keyword">new</span> Column(<span class="number">1</span>);</span><br><span class="line">column2=<span class="keyword">new</span> Column(<span class="number">2</span>);</span><br><span class="line">bird=<span class="keyword">new</span> Bird();</span><br><span class="line">score=<span class="number">0</span>;</span><br><span class="line">state=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//绘制背景</span></span><br><span class="line">g.drawImage(background, <span class="number">0</span>, <span class="number">0</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="comment">//绘制地面</span></span><br><span class="line">g.drawImage(ground.image, ground.x, ground.y, <span class="keyword">null</span>);</span><br><span class="line"><span class="comment">//绘制柱子</span></span><br><span class="line">g.drawImage(column1.image,column1.x-column1.width/<span class="number">2</span>,column1.y-column1.height/<span class="number">2</span>,<span class="keyword">null</span>);</span><br><span class="line">g.drawImage(column2.image,column2.x-column2.width/<span class="number">2</span>,column2.y-column2.height/<span class="number">2</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="comment">//绘制小鸟</span></span><br><span class="line">Graphics2D g2=(Graphics2D) g;</span><br><span class="line">g2.rotate(-bird.alpha,bird.x,bird.y);</span><br><span class="line">g.drawImage(bird.image,bird.x-bird.width/<span class="number">2</span>,bird.y-bird.height/<span class="number">2</span>,<span class="keyword">null</span>);</span><br><span class="line">g2.rotate(bird.alpha,bird.x,bird.y);</span><br><span class="line"><span class="comment">//绘制分数</span></span><br><span class="line">Font f=<span class="keyword">new</span> Font(Font.SANS_SERIF,Font.BOLD,<span class="number">40</span>);</span><br><span class="line">g.setFont(f);</span><br><span class="line">g.drawString(<span class="string">&quot;&quot;</span>+score, <span class="number">40</span>, <span class="number">60</span>);</span><br><span class="line">g.setColor(Color.WHITE);</span><br><span class="line">g.drawString(<span class="string">&quot;&quot;</span>+score,<span class="number">40</span>-<span class="number">3</span>, <span class="number">60</span>-<span class="number">3</span>);<span class="comment">//一个阴影效果</span></span><br><span class="line"><span class="comment">//绘制开始和结束界面</span></span><br><span class="line"><span class="keyword">switch</span>(state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> START:</span><br><span class="line">g.drawImage(startImage, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> GAME_OVER:</span><br><span class="line">g.drawImage(overImage, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//不断重复和绘制</span></span><br><span class="line">MouseListener l=<span class="keyword">new</span> MouseAdapter()</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">switch</span>(state) &#123;</span><br><span class="line"><span class="keyword">case</span> START:</span><br><span class="line"><span class="comment">//在开始前按下鼠标转为运行状态</span></span><br><span class="line">state=RUNNING;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> RUNNING:</span><br><span class="line"><span class="comment">//在运行状态，按下鼠标小鸟向上飞行</span></span><br><span class="line">bird.flappy();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> GAME_OVER:</span><br><span class="line"><span class="comment">//在结束状态，按下鼠标重置数据变为开始</span></span><br><span class="line">column1=<span class="keyword">new</span> Column(<span class="number">1</span>);</span><br><span class="line">column2=<span class="keyword">new</span> Column(<span class="number">2</span>);</span><br><span class="line">bird=<span class="keyword">new</span> Bird();</span><br><span class="line">score=<span class="number">0</span>;</span><br><span class="line">state=START;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">ex.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">addMouseListener(l);</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> START:</span><br><span class="line">bird.fly();</span><br><span class="line">ground.step();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> RUNNING:</span><br><span class="line">ground.step();</span><br><span class="line">column1.step();</span><br><span class="line">column2.step();</span><br><span class="line">bird.fly();</span><br><span class="line">bird.step();</span><br><span class="line"><span class="comment">//if(bird.x==column1.x||bird.x==column2.x)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//score++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">score++;</span><br><span class="line"><span class="comment">//检测是否碰撞</span></span><br><span class="line"><span class="keyword">if</span>(bird.hit(ground)||bird.hit(column1)||bird.hit(column2))</span><br><span class="line">&#123;</span><br><span class="line">state=GAME_OVER;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//休眠1000/60毫秒</span></span><br><span class="line">Thread.sleep(<span class="number">1000</span>/<span class="number">60</span>);</span><br><span class="line">repaint();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动方法</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">JFrame frame=<span class="keyword">new</span> JFrame();</span><br><span class="line">BirdGame game=<span class="keyword">new</span> BirdGame();</span><br><span class="line">frame.add(game);</span><br><span class="line">frame.setSize(<span class="number">440</span>,<span class="number">670</span>);</span><br><span class="line">frame.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">game.action();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-地面类"><a href="#2-地面类" class="headerlink" title="2.地面类"></a>2.地面类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> game;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ground</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Image image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x,y;<span class="comment">//位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> width,height;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地面初始化</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Ground</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">image =<span class="keyword">new</span> ImageIcon(<span class="string">&quot;source/ground.png&quot;</span>).getImage();</span><br><span class="line">width=image.getWidth(<span class="keyword">null</span>);</span><br><span class="line">height=image.getHeight(<span class="keyword">null</span>);</span><br><span class="line">x=<span class="number">0</span>;</span><br><span class="line">y=<span class="number">500</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//左移</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">step</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x-=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=-<span class="number">109</span>)</span><br><span class="line">&#123;</span><br><span class="line">x=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-小鸟类"><a href="#3-小鸟类" class="headerlink" title="3.小鸟类"></a>3.小鸟类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> game;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bird</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Image image;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">int</span> width,height;</span><br><span class="line"><span class="keyword">int</span> size;</span><br><span class="line"><span class="comment">//重力加速度</span></span><br><span class="line"><span class="keyword">double</span> g;</span><br><span class="line"><span class="comment">//位移间隔时间</span></span><br><span class="line"><span class="keyword">double</span> t;</span><br><span class="line"><span class="comment">//最初速度</span></span><br><span class="line"><span class="keyword">double</span> v0;</span><br><span class="line"><span class="comment">//当前上抛速度</span></span><br><span class="line"><span class="keyword">double</span> speed;</span><br><span class="line"><span class="comment">//经过时间t后的位移</span></span><br><span class="line"><span class="keyword">double</span> s;</span><br><span class="line"><span class="comment">//小鸟的倾角（弧度）</span></span><br><span class="line"><span class="keyword">double</span> alpha;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一组图片记录小鸟动画帧</span></span><br><span class="line">Image[] images;</span><br><span class="line"><span class="comment">//帧数下标</span></span><br><span class="line"><span class="keyword">int</span> index;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Bird</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">image=<span class="keyword">new</span> ImageIcon(<span class="string">&quot;source/0.png&quot;</span>).getImage();</span><br><span class="line">width = image.getWidth(<span class="keyword">null</span>);</span><br><span class="line">height = image.getHeight(<span class="keyword">null</span>);</span><br><span class="line">x=<span class="number">132</span>;</span><br><span class="line">y=<span class="number">280</span>;</span><br><span class="line">size=<span class="number">40</span>;</span><br><span class="line"><span class="comment">//位移参数</span></span><br><span class="line">g=<span class="number">4</span>;</span><br><span class="line">v0=<span class="number">20</span>;</span><br><span class="line">t=<span class="number">0.25</span>;</span><br><span class="line">speed=v0;</span><br><span class="line">s=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//小鸟偏转角度</span></span><br><span class="line">alpha=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化动画帧参数</span></span><br><span class="line">images=<span class="keyword">new</span> Image[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">images[i]=<span class="keyword">new</span> ImageIcon(<span class="string">&quot;source/&quot;</span>+i+<span class="string">&quot;.png&quot;</span>).getImage();</span><br><span class="line">&#125;</span><br><span class="line">index=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//飞行动作（变化一帧）</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">index++;</span><br><span class="line">image=images[(index/<span class="number">12</span>)%<span class="number">8</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移动一步</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">step</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> v0=speed;</span><br><span class="line"><span class="comment">//计算上跑位移</span></span><br><span class="line">s=v0*t+g*t*t/<span class="number">2</span>;</span><br><span class="line"><span class="comment">//计算鸟的坐标</span></span><br><span class="line">y=y-(<span class="keyword">int</span>)s;</span><br><span class="line"><span class="comment">//计算下次移动速度</span></span><br><span class="line"><span class="keyword">double</span> v=v0-g*t;</span><br><span class="line">speed =v;</span><br><span class="line"><span class="comment">//计算倾角（反正切函数）</span></span><br><span class="line">alpha=Math.atan(s/<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//向上飞行</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">flappy</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//重置速度</span></span><br><span class="line">speed=v0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测小鸟是否碰撞到地面</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hit</span><span class="params">(Ground ground)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> hit =y+size/<span class="number">2</span>&gt;ground.y;</span><br><span class="line"><span class="keyword">if</span>(hit)</span><br><span class="line">&#123;</span><br><span class="line">y=ground.y-size/<span class="number">2</span>;</span><br><span class="line">alpha=Math.PI/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> hit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测小鸟是否撞到柱子</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hit</span><span class="params">(Column column)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//检测是否在柱子范围内</span></span><br><span class="line"><span class="keyword">if</span>(x&gt;column.x-column.width/<span class="number">2</span>-size/<span class="number">2</span>&amp;&amp;x&lt;column.x+column.width/<span class="number">2</span>+size/<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y&gt;column.y-column.gap/<span class="number">2</span>+size/<span class="number">2</span>&amp;&amp;y&lt;column.y+column.gap/<span class="number">2</span>-size/<span class="number">2</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-柱子类"><a href="#4-柱子类" class="headerlink" title="4.柱子类"></a>4.柱子类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> game;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Column</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Image image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">int</span> width,height;</span><br><span class="line"><span class="comment">//柱子之间缝隙</span></span><br><span class="line"><span class="keyword">int</span> gap;</span><br><span class="line"><span class="comment">//柱子之间的距离</span></span><br><span class="line"><span class="keyword">int</span> distance;</span><br><span class="line">Random random =<span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始第N根柱子</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Column</span><span class="params">(<span class="keyword">int</span> n)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">image=<span class="keyword">new</span> ImageIcon(<span class="string">&quot;source/column.png&quot;</span>).getImage();</span><br><span class="line">width=image.getWidth(<span class="keyword">null</span>);</span><br><span class="line">height=image.getHeight(<span class="keyword">null</span>);</span><br><span class="line">gap=<span class="number">144</span>;</span><br><span class="line">distance=<span class="number">245</span>;</span><br><span class="line">x=<span class="number">550</span>+(n-<span class="number">1</span>)*distance;</span><br><span class="line">y=random.nextInt(<span class="number">218</span>)+<span class="number">132</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">step</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x-=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;= -width/<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">x=distance*<span class="number">2</span>-width/<span class="number">2</span>;</span><br><span class="line">y=random.nextInt(<span class="number">218</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;声明：该项目是牛客网的一个开源项目&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;@&lt;a href=&quot;%E9%A3%9E%E7%BF%94%E5%B0%8F%E9%B8%9F%E6%B8%B8%E6%88%8F&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;文章目录&quot;&gt;&lt;a href=&quot;#文章目录&quot; class=&quot;headerlink&quot; title=&quot;文章目录&quot;&gt;&lt;/a&gt;文章目录&lt;/h1&gt;&lt;h1 id=&quot;一-效果图&quot;&gt;&lt;a href=&quot;#一-效果图&quot; class=&quot;headerlink&quot; title=&quot;一  效果图&quot;&gt;&lt;/a&gt;一  效果图&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20210613224610839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzYmJ2,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
